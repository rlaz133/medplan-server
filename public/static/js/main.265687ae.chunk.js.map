{"version":3,"sources":["components/SideBar.js","components/NavBar.js","components/HomeSeachResult.js","components/MapContainer.js","config.js","components/HomePage.js","components/Signup.js","components/Login.js","components/PatientProfile.js","components/PatientAppointments.js","components/PatientMedPlanner.js","components/event-utils.js","components/DoctorProfile.js","components/DoctorCalendar.js","components/AppointmentDetails.js","components/PrescriptionItem.js","components/PrescriptionForm.js","components/CreatePrescription.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","this","props","usertype","loggedInUser","username","to","onClick","onLogout","className","_id","Component","NavBar","src","alt","HomeSeachResult","doctorList","map","doctor","picture","speciality","address","openingTime","closingTime","async","defer","type","MapContainer","google","zoom","style","width","height","initialCenter","lat","lng","position","API_URL","GoogleApiWrapper","process","REACT_APP_API_URL","HomePage","state","doctors","filteredDoctors","specialityQuery","cityQuery","handleChange","e","docSearch","currentTarget","name","docSearchValue","value","setState","handleSearch","console","log","searchResult","filter","city","toLowerCase","includes","axios","get","then","res","data","onChange","placeholder","Signup","passwordStrength","displayError","onSubmit","onSignUp","for","onClear","onPass","errorMsg","Login","onLogIn","PatientProfile","patient","updatedField","editing","unedited","handleEnable","buttons","getElementsByTagName","readOnly","classList","toggle","field","handleDisable","handleEdit","d","keyName","Object","keys","values","patch","withCredentials","birthDate","weight","allergies","history","phoneNumber","email","id","autocomplete","document","getElementById","moment","local","format","PatientAppointments","appointments","report","handleDownload","appointmentId","preventDefault","window","open","ordered","JSON","parse","stringify","sort","a","b","time","appointment","timeToApp","dateApp","timeApp","Date","now","toNow","fromNow","reason","isBefore","disabled","PatientMedPlanner","currentday","Axios","filteredmeds","prescriptions","prescription","medications","flat","medication","endDate","startDate","diff","daysPerTake","currentmeds","subtract","toString","add","previousDay","nextDay","med","takesPerDay","dosePerTake","comments","eventGuid","createEventId","String","DoctorProfile","weekendsVisible","currentEvents","events","match","params","doctorId","handleImgEnable","handleImgEdit","uppicture","image","files","uploadData","FormData","append","post","handleDateSelect","selectInfo","startStr","view","calendar","unselect","alert","calendarApi","end","start","title","prompt","addEvent","endStr","startEditable","editable","handleEventClick","clickInfo","event","extendedProps","isAfter","confirm","remove","handleEvents","appoCreate","eventId","appoEdit","appoCancel","delete","eventColor","proper","color","phone","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","momentPlugin","headerToolbar","left","center","right","initialView","titleFormat","selectable","selectMirror","dayMaxEvents","allDaySlot","eventStartEditable","slotMinTime","slotMaxTime","businessHours","daysOfWeek","startTime","endTime","eventConstraint","weekends","select","eventContent","renderEventContent","eventClick","eventsSet","eventAdd","eventChange","eventRemove","defaultTimedEventDuration","eventInfo","timeText","DoctorCalendar","push","eventDurationEditable","AppointmentDetails","cancelAppointment","toggleLoader","loadReport","PrescriptionItem","onDelete","PrescriptionForm","onCommit","min","toLocaleString","rows","cols","CreatePrescription","handleSubmit","newMedication","clonePrescription","handleDelete","newPrescription","index","handleCreate","catch","err","key","App","desiredUrl","handleSignUp","password","response","errorMessage","handleLogIn","location","pathname","error","handleLogOut","handlePass","strength","lowerCase","RegExp","upperCase","number","especial","amount","test","clearError","exact","path","render","doctorList1","routeProps","React","withRouter","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.265687ae.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default class SideBar extends Component {\r\n\r\n    render() {\r\n\r\n\r\n\r\n        if (this.props.usertype === \"patient\"){\r\n            return (\r\n                <>    \r\n                    <nav>\r\n                        <h4>Patient: {this.props.loggedInUser.username}</h4>\r\n                        <ul>\r\n                            <li><Link to=\"/\">Search for a doctor</Link></li>\r\n                            <li><Link to=\"/profile\">Profile</Link></li>\r\n                            <li><Link to=\"/appointments\">Appointments</Link></li>\r\n                            <li><Link to=\"/medication-planner\">Medication planner</Link></li>                                  \r\n                        </ul>\r\n                        <button onClick={this.props.onLogout} className=\"button\">LOG OUT</button>\r\n                    </nav>                   \r\n                </>\r\n            )\r\n\r\n\r\n        } else if (this.props.usertype === \"doctor\"){\r\n            return (\r\n                <>\r\n                    <nav>\r\n\r\n                        <h4>Doctor: {this.props.loggedInUser.username}</h4>\r\n\r\n                        <ul>\r\n                            <li><Link to=\"/calendar\">Calendar</Link></li>\r\n                            <li><Link to={`/doctor/${this.props.loggedInUser._id}`}>Profile</Link></li>\r\n                            <li><Link to=\"/\">Search for a doctor</Link></li>\r\n                        </ul>\r\n                        <button onClick={this.props.onLogout} className=\"button\">LOG OUT</button>  \r\n                    </nav>                   \r\n                </>                \r\n            )\r\n\r\n            \r\n        } else if (!this.props.loggedInUser){\r\n            return (\r\n                <>\r\n                    <nav>                    \r\n                        <Link to=\"/signup\"><button className=\"button\">SIGN UP</button></Link>\r\n                        <Link to=\"/login\"><button className=\"button\">LOG IN</button></Link>                    \r\n                    </nav>  \r\n                </>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n\r\n                    <Link to=\"/\"><img src=\"../images/logo-transparent.png\" alt=\"logo\" className=\"header-logo\"/></Link> \r\n\r\n                </header>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class HomeSeachResult extends Component {\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"main-content\">\r\n\r\n                {\r\n                    this.props.doctorList.map((doctor) => {\r\n                        return  (\r\n                            <div className=\"home-doctor-card\">\r\n\r\n                                <img className=\"doc-img\" src={doctor.picture} alt=\"profile picture\"/>\r\n                                <div className=\"search-doc-details-text\">\r\n                                    <p><strong>{doctor.username}</strong></p>\r\n                                    <p>{doctor.speciality}</p>\r\n                                    <p><em>{doctor.address}</em></p>\r\n                                    <p>From {doctor.openingTime} to {doctor.closingTime}</p>\r\n                                </div>                                \r\n\r\n                                <Link to={`/doctor/${doctor._id}`}>\r\n                                <button className=\"button\">Book an appointment</button>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                              \r\n                    })\r\n                }\r\n\r\n                <script async defer src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap\" type=\"text/javascript\"></script>\r\n                \r\n            </div>\r\n\r\n                \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport googleMapStyle from \"../googleMapStyle\";\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\n\r\n\r\nexport class MapContainer extends Component {\r\n  render() {\r\n\r\n    // state = {\r\n    //   mapPlaces: []\r\n    // }\r\n\r\n\r\n    const mapStyles = {\r\n      width: '350px',\r\n      height: '200px'\r\n    };\r\n\r\n    return (\r\n    <>\r\n\r\n\r\n      <div className=\"map-card\">\r\n\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={10}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 52.372471, lng: 4.890983}}\r\n        >\r\n\r\n          <Marker position={{ lat: 52.370292, lng: 4.897403}} />\r\n\r\n        </Map>\r\n        \r\n      </div>\r\n\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\n// Map.defaultProps = googleMapStyle;\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n})(MapContainer);\r\n\r\n\r\n","\r\n\r\n//to be modified if needed, check w/ Rafa\r\n\r\nexport const API_URL =  process.env.REACT_APP_API_URL","import React, { Component } from 'react'\r\nimport HomeSeachResult from './HomeSeachResult'\r\n\r\n\r\nimport MapContainer from './MapContainer'\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport {API_URL} from '../config'\r\nimport axios from 'axios'\r\n\r\nexport default class HomePage extends Component {\r\n\r\n    state = {\r\n        doctors: [],\r\n        filteredDoctors: [],\r\n        specialityQuery: \"\",\r\n        cityQuery: \"\"\r\n        \r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        axios.get(`${API_URL}/doctor/search`)\r\n            .then((res) => {\r\n            this.setState({\r\n                doctors: res.data,\r\n                filteredDoctors: res.data\r\n            })\r\n        })\r\n    } \r\n    \r\n\r\n    handleChange = (e) => {\r\n        let docSearch = e.currentTarget.name\r\n        let docSearchValue = e.currentTarget.value\r\n        \r\n\r\n\r\n        if (docSearch === \"city\"){\r\n            this.setState({\r\n                cityQuery:  docSearchValue\r\n            }, ()=>this.handleSearch())\r\n        } else {\r\n            this.setState({\r\n                specialityQuery: docSearchValue\r\n            }, ()=>this.handleSearch())\r\n        }\r\n    }\r\n      \r\n\r\n\r\n    handleSearch = (e) => {\r\n\r\n        console.log(\"state in handle search\", this.state.cityQuery)\r\n        console.log(\"state in handle search\", this.state.specialityQuery)\r\n\r\n        let searchResult = this.state.doctors.filter(doctor => {\r\n            if (!doctor.speciality || !doctor.city){\r\n                return false\r\n            } \r\n            console.log(\"inside the map\", doctor.speciality)\r\n            return doctor.speciality.toLowerCase().includes(this.state.specialityQuery.toLowerCase()) \r\n            &&  doctor.city.toLowerCase().includes(this.state.cityQuery.toLowerCase()) \r\n\r\n        })\r\n\r\n        this.setState({\r\n            filteredDoctors: searchResult\r\n        })\r\n\r\n    }\r\n        \r\n\r\n\r\n    render() {\r\n        return (\r\n            <>                               \r\n\r\n                <div className=\"index-info-card\">\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/doctors.png\" alt=\"img\"/> \r\n                        <p>Thousands of doctors available on the platform.</p>\r\n                    </div>\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/online-booking.png\" alt=\"img\"/>\r\n                        <p>Easy online booking without struggle and 24/7!</p>\r\n                    </div>\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/prescription.png\" alt=\"img\"/>\r\n                        <p>Direct access to your prescriptions.</p>\r\n                    </div> \r\n                    \r\n                </div>  \r\n\r\n                <div className=\"home-search-bar\">\r\n                    <input className=\"input-search\" onChange={this.handleChange} name=\"speciality\" type=\"text\" placeholder=\"Search by speciality\"></input>\r\n                    <input className=\"input-search\" onChange={this.handleChange} name=\"city\" type=\"text\" placeholder=\"Search by city\"></input>\r\n                </div>\r\n\r\n             \r\n                {/* <MapContainer /> */}\r\n\r\n                <HomeSeachResult doctorList={this.state.filteredDoctors} />\r\n\r\n               \r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default class Signup extends Component {\r\n    state={\r\n        passwordStrength: '',\r\n        displayError: true\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Sign Up</h1>\r\n\r\n                <form onSubmit={this.props.onSignUp} className=\"main-content sign-log-form\">\r\n\r\n\r\n                    <div className=\"user-type-choice\">\r\n                        <label className=\"label-user\" for=\"usertype\">I am a </label> \r\n                        <select className=\"button\" name=\"usertype\">\r\n                            <option className=\"user-type-choice\" value=\"patient\">Patient</option> \r\n                            <option className=\"user-type-choice\" value=\"doctor\">Doctor</option>                            \r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <label className=\"login-label\">Full name</label>\r\n                    <input onChange={this.props.onClear} name=\"username\" type=\"text\"></input>\r\n\r\n                    <label className=\"login-label\">Email</label>\r\n                    <input onChange={this.props.onClear} name=\"email\" type=\"email\"></input>\r\n\r\n                    <label className=\"login-label\">Password</label>\r\n                    <em><small>Password needs to be at least 8 characters, and include both lower and upper cases, numbers and special signs.</small></em>\r\n                    <input onChange={this.props.onPass} name=\"password\" type=\"password\"></input>\r\n                    <small>{this.props.passwordStrength}</small>\r\n\r\n\r\n                    <div className=\"sign-log-btn-line\">\r\n                        <button className=\"button\" type=\"submit\">Submit</button>\r\n                        <Link to=\"/login\"><button className=\"button\">Or Log In!</button></Link>\r\n                    </div>                    \r\n\r\n                </form>\r\n\r\n\r\n                <p>{this.props.errorMsg}</p>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n    \r\n\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n\r\n            <>\r\n\r\n                <h1>Log In</h1>\r\n\r\n                <form onSubmit={this.props.onLogIn} className=\"main-content sign-log-form\">\r\n\r\n\r\n                    <div className=\"user-type-choice\">\r\n                        <label className=\"label-user\" for=\"usertype\">I am a </label>\r\n                        <select className=\"button\" name=\"usertype\">\r\n                            <option className=\"user-type-choice\" value=\"patient\">Patient</option>\r\n                            <option className=\"user-type-choice\" value=\"doctor\">Doctor</option>\r\n                            \r\n                        </select>\r\n                    </div>\r\n\r\n                    <label className=\"login-label\">Email</label>\r\n                    <input onChange={this.props.onClear} name=\"email\" type=\"email\"></input>\r\n\r\n                    <label className=\"login-label\">Password</label>\r\n                    <input onChange={this.props.onClear} name=\"password\" type=\"password\"></input>\r\n\r\n                    <div className=\"sign-log-btn-line\">\r\n                        <button className=\"button\" type=\"submit\">Submit</button>\r\n                        <Link to=\"/signup\"><button className=\"button\">Or Sign Up!</button></Link>\r\n                    </div>\r\n\r\n                    \r\n\r\n                </form>\r\n\r\n                <p>{this.props.errorMsg}</p>\r\n\r\n                \r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Login from \"./Login\"\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\n\r\nexport default class PatientProfile extends Component {\r\n\r\n  state={\r\n    patient: {},\r\n    updatedField: {},\r\n    editing: false,\r\n    unedited: '',\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/planner`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({\r\n          patient: res.data\r\n        })\r\n      })    \r\n  }\r\n  \r\n\r\n//Edit Profile methods\r\n\r\n  handleChange = (e) => {\r\n    const {name, value}= e.currentTarget\r\n    this.setState({\r\n        updatedField: {[name]: value}, \r\n        patient: {...this.state.patient, [name]:value}\r\n    })\r\n  }\r\n\r\n  handleEnable = (e)=>{\r\n    if (!this.state.editing){\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = false\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].value\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, unedited: field})\r\n    }\r\n  }\r\n  \r\n  handleDisable = (e)=>{\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = true\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].name\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, patient:  {...this.state.patient, [field]: this.state.unedited, updatedField:{}}})\r\n  }\r\n\r\n  handleEdit = (e, d) => {\r\n    let keyName= Object.keys(e)[0]\r\n    let value = Object.values(e)[0]\r\n    axios.patch(`${API_URL}/patient/${this.props.loggedInUser._id}`, {[keyName]: value}, {withCredentials:true})\r\n    // this.setState({\r\n\r\n\r\n    // })\r\n    let buttons = d.getElementsByTagName('BUTTON')\r\n    d.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing})\r\n    console.log(this.state.patient)\r\n  }\r\n\r\n\r\n \r\n  render() {\r\n    if (!this.props.loggedInUser){\r\n      return <Login />\r\n    }\r\n\r\n    if (!this.state.patient){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n    }\r\n\r\n\r\n    const {username, birthDate, height, weight, allergies, history, phoneNumber, address, email} = this.state.patient\r\n    console.log (birthDate)\r\n\r\n    return (\r\n      <>\r\n        <h1>Profile</h1>\r\n\r\n\r\n        <div className=\"main-content profile-page-content\">\r\n\r\n          <div className=\"profile-field\" id='name-profile'>\r\n            <label className=\"profile-label\"><strong>Full Name</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"username\" type=\"text\" value={username}  onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n            <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='birthDate-profile'>\r\n            <label className=\"profile-label\"><strong>Birth Date</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"birthDate\" type=\"text\" value={moment(birthDate).local().format('D/MM/YYYY')}  onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n    \r\n          <div className=\"profile-field\" id='address-profile'>\r\n            <label className=\"profile-label\"><strong>Address</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"address\" type=\"text\" value={address} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='email-profile'>\r\n            <label className=\"profile-label\"><strong>E-Mail</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"email\"  type=\"email\" value={email} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>  \r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='phoneNumber-profile'>\r\n            <label className=\"profile-label\"><strong>Telephone</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"phoneNumber\" type=\"text\" value={phoneNumber} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='height-profile'>\r\n            <label className=\"profile-label\"><strong>Height (cm)</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"height\" type=\"text\" value={height} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='weight-profile'>\r\n            <label className=\"profile-label\"><strong>Weight (kg)</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"weight\" type=\"text\" value={weight} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='allergies-profile'>\r\n            <label className=\"profile-label\"><strong>Allergies</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"allergies\" type=\"text\" value={allergies} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n            <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='history-profile'>\r\n            <label className=\"profile-label\"><strong>Medical History</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"history\" type=\"text\" value={history} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        \r\n\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n  \r\n\r\n  ","import React, { Component } from 'react';\r\nimport {API_URL} from '../config';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport default class PatientAppointments extends Component {\r\n\r\n\r\n    state = {\r\n        loggedInUser: this.props.loggedInUser,\r\n        usertype: this.props.usertype,\r\n        appointments: null,\r\n        report: null,\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount(){\r\n        axios.get(`${API_URL}/patient/appointments` , {withCredentials: true})\r\n        .then((res) => {\r\n            let ordered = JSON.parse(JSON.stringify(res.data))\r\n            ordered.sort((a, b)=> moment(a.time) - moment(b.time)) \r\n            console.log (ordered)\r\n            this.setState({\r\n            appointments: ordered           \r\n            }, ()=> console.log(this.state.appointments))\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    \r\n    handleDownload = (e, appointmentId) => {\r\n        e.preventDefault();\r\n        axios.get(`${API_URL}/patient/appointment/report/${appointmentId}`, {withCredentials: true})\r\n        .then((res) => {\r\n            console.log(res.data.report)\r\n            this.setState({\r\n                report: res.data.report,\r\n            })\r\n            window.open(this.state.report, '_blank')\r\n\r\n        })    \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        if (!this.state.appointments){\r\n            return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <h1>Appointments</h1>\r\n\r\n                {\r\n                    this.state.appointments.map(appointment => {\r\n\r\n                        let dateApp = moment(appointment.time).local().format('Do MMM YYYY')\r\n                        let timeApp =  moment(appointment.time).local().format('HH:mm')\r\n                        let timeToApp\r\n                        (appointment.time > Date.now()) ? timeToApp=moment(appointment.time).local().toNow(): timeToApp=moment(appointment.time).local().fromNow()\r\n\r\n                        return (\r\n                            <div className=\"main-content\">  \r\n\r\n                                <div className=\"appointment-card\">\r\n                                    <div>\r\n                                        <p><strong>On: {dateApp} at {timeApp}, {timeToApp}</strong></p>\r\n\r\n                                        <p>With <strong>Dr. {appointment.doctor.username}</strong></p>\r\n                                        <p><strong>Specialized in: </strong>{appointment.doctor.speciality}</p>\r\n                                        <p><strong>Purpose: </strong>{appointment.reason}</p>\r\n                                        <p><strong>Located at: </strong>{appointment.doctor.address}</p>\r\n                                    </div>\r\n\r\n                                    {         \r\n                                    moment(appointment.time).isBefore(Date.now()) ? (\r\n                                        <Link to={`/doctor/${appointment.doctor._id}`}><button className=\"button\">Cancel</button></Link>\r\n\r\n                                            ) : (appointment.report? \r\n                                            \r\n                                                <button className=\"button\" onClick={(e) => this.handleDownload(e, appointment._id)}>See Report</button>:\r\n                                                <button className=\"button disabled\" disabled>No Report</button>\r\n\r\n                                                )\r\n                                    } \r\n                                </div>\r\n                            </div>\r\n                        )                      \r\n                    })\r\n\r\n                }    \r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport {API_URL} from '../config'\r\n// import { DayCellContent } from '@fullcalendar/react'\r\nimport moment from 'moment'\r\n\r\nexport default class PatientMedPlanner extends Component {\r\n\r\n    state={\r\n        patient:{},\r\n        currentday: moment(Date.now()) \r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(`${API_URL}/planner`, {withCredentials:true})\r\n            .then((res)=>{\r\n                this.setState({patient: res.data}, ()=>{\r\n                    console.log(this.state.patient)\r\n                    let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n                    let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n                    this.setState({currentmeds: filteredmeds}, ()=>console.log(this.state))\r\n                })\r\n            })\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState){\r\n\r\n    // }\r\n    \r\n\r\n    previousDay(){\r\n        this.setState({currentday: this.state.currentday.subtract(1, 'day')}, console.log (this.state.currentday.toString()))\r\n        let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n        let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n        this.setState({currentmeds: filteredmeds}, ()=>console.log(this.state))\r\n    }\r\n\r\n    nextDay(){\r\n        this.setState({currentday: this.state.currentday.add(1, 'day')}, console.log (this.state.currentday.toString()))\r\n        let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n        let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n        this.setState({currentmeds: filteredmeds}, ()=>console.log(this.state))\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.currentmeds){\r\n            return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n          }\r\n\r\n        return (\r\n            <>\r\n                <h1>Medication Planner</h1>\r\n\r\n                <div className=\"patient-cal-date-field\">\r\n                    <button className=\"button calendar-day\" onClick={()=>this.previousDay()}>&lt;</button>\r\n                    <h4>{this.state.currentday.format(\"Do MMM, YYYY\").toString()}</h4>\r\n                    <button className=\"button calendar-day\" onClick={()=>this.nextDay()}>&gt;</button>\r\n                </div>\r\n\r\n                <div className=\"main-content patient-cal-day-times\">\r\n\r\n                    <h4 className=\"time-planner\">Morning</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===2){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                    <hr/>\r\n\r\n                    <h4 className=\"time-planner\">Noon</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===1){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                    <hr/>\r\n\r\n                    <h4 className=\"time-planner\">Night</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===2){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n","let eventGuid = 0\r\n\r\nexport function createEventId() {\r\n  return String(eventGuid++)\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport { createEventId } from './event-utils'\r\nimport moment from 'moment'\r\nimport momentPlugin from '@fullcalendar/moment'\r\n\r\n\r\nexport default class DoctorProfile extends Component {\r\n\r\n  state={\r\n    doctor: {},\r\n    weekendsVisible: false,\r\n    currentEvents: [],\r\n    updatedField: {},\r\n    editing: false,\r\n    unedited: '',\r\n    appointments: [],\r\n    events:[]\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({doctor: res.data}, ()=>{console.log(this.state.doctor, new Date(this.state.doctor.openingTime))})\r\n      })\r\n      axios.get(`${API_URL}/doctor/appointments/${this.props.match.params.doctorId}`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({appointments: res.data, events: res.data.map(appointment=>{\r\n          console.log ('ids:', appointment.patient, this.props.loggedInUser._id)\r\n          let eventColor= appointment.patient._id===this.props.loggedInUser._id? '#3788d8': 'gray'\r\n          let proper = appointment.patient._id===this.props.loggedInUser._id? true : false\r\n          return {title: appointment.reason, start:appointment.time, id:appointment.eventId, startEditable: proper, patient: appointment.patient, color: eventColor}})},\r\n         ()=>{console.log(this.state)}\r\n         ) \r\n      })\r\n      \r\n  }\r\n  \r\n\r\n//Edit Profile methods\r\n\r\n  handleChange = (e) => {\r\n    const {name, value}= e.currentTarget\r\n    this.setState({\r\n        updatedField: {[name]: value}, \r\n        doctor:{...this.state.doctor, [name]:value}\r\n    })\r\n  }\r\n\r\n  handleEnable = (e)=>{\r\n    if (!this.state.editing){\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = false\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].value\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, unedited: field})\r\n    }\r\n  }\r\n  \r\n  handleDisable = (e)=>{\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = true\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].name\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, doctor: {...this.state.doctor, [field]: this.state.unedited, updatedField:{}}})\r\n  }\r\n\r\n  handleEdit = (e, d) => {\r\n    let keyName= Object.keys(e)[0]\r\n    let value = Object.values(e)[0]\r\n    axios.patch(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {[keyName]: value}, {withCredentials:true})\r\n    let buttons = d.getElementsByTagName('BUTTON')\r\n    d.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing})\r\n  }\r\n\r\n  handleImgEnable= (e)=>{\r\n      e.getElementsByTagName('INPUT')[0].classList.toggle('hidden-button')\r\n      e.getElementsByTagName('BUTTON')[1].classList.toggle('hidden-button')\r\n      this.setState({editing: !this.state.editing})\r\n  }\r\n\r\n  handleImgEdit =(e)=>{\r\n    if (e){\r\n    let image = e.getElementsByTagName('INPUT')[0].files[0]\r\n    let uploadData = new FormData()\r\n    uploadData.append('imageUrl', image)\r\n    let uppicture\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('hidden-button')\r\n    e.getElementsByTagName('BUTTON')[1].classList.toggle('hidden-button')\r\n    axios.post(`${API_URL}/upload`, uploadData)\r\n    .then((res)=> {uppicture= res.data.image; axios.patch(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {picture: res.data.image}, {withCredentials:true})})\r\n    .then((res)=>{console.log (res);this.setState({doctor:{...this.state.doctor, picture: uppicture}})})\r\n    \r\n  }}\r\n\r\n  //Calendar methods \r\n  handleDateSelect = (selectInfo) => {\r\n    if (!moment(new Date(selectInfo.startStr)).isBefore(Date.now())) {\r\n      let calendarApi = selectInfo.view.calendar\r\n      calendarApi.unselect()\r\n      \r\n      if (selectInfo.end-selectInfo.start>1800000) {\r\n        alert('Appointments must have a duration of half an hour')\r\n        return\r\n      }\r\n\r\n    let title = prompt('Please enter the reason for the appointment: ')\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        patient: this.props.loggedInUser._id,\r\n        startEditable: true,\r\n        editable: false\r\n      })\r\n    }}\r\n    else{\r\n      selectInfo.view.calendar.unselect()\r\n      alert('Please, select a valid date')\r\n    }\r\n  }\r\n  \r\n  handleEventClick = (clickInfo) => {\r\n    console.log (clickInfo.event.startStr)\r\n    if ((clickInfo.event.extendedProps.patient._id === this.props.loggedInUser._id || clickInfo.event.extendedProps.patient === this.props.loggedInUser._id)\r\n      && moment(clickInfo.event.startStr).isAfter(moment(Date.now()))\r\n      ){\r\n      if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`))   {clickInfo.event.remove()}\r\n     \r\n  }}\r\n  \r\n  handleEvents = (events) => {\r\n    this.setState({\r\n      currentEvents: events\r\n    })\r\n  }\r\n\r\n  //Linking of calendar with database\r\n  appoCreate= (event) =>{\r\n    console.log (event.event)\r\n    axios.post(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}`, \r\n      {time: event.event.start, eventId: event.event.id, reason: event.event.title}, {withCredentials:true})\r\n  }\r\n\r\n  appoEdit= (event) =>{\r\n    axios.patch(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}`, \r\n      {time: event.event.start, eventId: event.event.id, reason: event.event.title}, {withCredentials:true})\r\n  }\r\n\r\n  appoCancel= (event) =>{\r\n    console.log (event.event)\r\n    axios.delete(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}/${event.event.id}`, {withCredentials:true})\r\n  }\r\n  \r\n  render() {\r\n\r\n    \r\n\r\n    if (!this.state.doctor){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n    }\r\n    \r\n    const {username, speciality, city, address, email, phone, openingTime, closingTime, picture} = this.state.doctor\r\n \r\n    return (\r\n      //Profile\r\n      <>\r\n\r\n        <h1>Doctor Profile</h1>\r\n\r\n        <div className=\"main-content profile-page-content\">\r\n\r\n          <div className=\"profile-field\" id='image-profile'>\r\n              <img src={picture} alt='' className=\"doc-img\"/>\r\n              {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n                <>\r\n                  <button className=\"edit-profile\" onClick={()=>this.handleImgEnable(document.getElementById('image-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                  <input  autocomplete=\"off\" type=\"file\" className=\"form-control hidden-button\" name=\"image\" id=\"image\" />\r\n                <button type='submit' className='hidden-button edit-profile' onClick={()=>this.handleImgEdit(document.getElementById('image-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n                </>\r\n              :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='name-profile'>\r\n            <label className=\"profile-label\"><strong>Name</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"username\" type=\"text\" value={username}  onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='speciality-profile'>\r\n            <label className=\"profile-label\"><strong>Speciality</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"speciality\" type=\"text\" value={speciality}  onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='city-profile'>\r\n            <label className=\"profile-label\"><strong>City</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"city\" type=\"text\" value={city} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n          :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='address-profile'>\r\n            <label className=\"profile-label\"><strong>Address</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"address\" type=\"text\" value={address} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='email-profile'>\r\n            <label className=\"profile-label\"><strong>E-Mail</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"email\"  type=\"email\" value={email} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>  \r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='phone-profile'>\r\n            <label className=\"profile-label\"><strong>Telephone</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"phone\" type=\"text\" value={phone} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}        \r\n          </div>\r\n          \r\n          <div className=\"profile-field\" id='opening-profile'>\r\n            <label className=\"profile-label\"><strong>Opening time</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"openingTime\" type=\"text\" value={openingTime} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n          \r\n          <div className=\"profile-field\" id='closing-profile'>\r\n            <label className=\"profile-label\"><strong>Closing time</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"closingTime\" type=\"text\" value={closingTime} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          \r\n\r\n          {/*Calendar  */}\r\n          {(this.props.usertype==='patient') ? \r\n           <FullCalendar\r\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, momentPlugin]}\r\n              headerToolbar={{\r\n                left: 'prev,next',\r\n                center: 'title',\r\n                right: ''\r\n              }}\r\n              initialView='timeGridWeek'\r\n              titleFormat = 'Do MMM YYYY'\r\n              selectable={true}\r\n              selectMirror={false}\r\n              dayMaxEvents={true}\r\n              allDaySlot= {false}\r\n              eventStartEditable={true}\r\n              slotMinTime= '08:00'\r\n              slotMaxTime= '20:00'\r\n              businessHours = {{businessHours: {\r\n                  daysOfWeek: [ 1, 2, 3, 4, 5 ], \r\n                  startTime: this.state.doctor.openingTime, \r\n                  endTime: this.state.doctor.closingTime, \r\n                }}}\r\n              eventConstraint= {{\r\n                  start: Date.now(),\r\n                  end: '2100-01-01' // hard coded goodness unfortunately\r\n                }}\r\n              weekends={this.state.weekendsVisible}\r\n              events={this.state.events} \r\n              select={this.handleDateSelect}\r\n              eventContent={renderEventContent} \r\n              eventClick={this.handleEventClick}\r\n              eventsSet={this.handleEvents} \r\n              eventAdd={(event)=>this.appoCreate(event)}\r\n              eventChange={(event)=>this.appoEdit(event)}\r\n              eventRemove={(event)=>this.appoCancel(event)}\r\n              defaultTimedEventDuration= '00:30'\r\n            />\r\n            :null}\r\n\r\n        </div>     \r\n                   \r\n      </>        \r\n      )\r\n    \r\n    }\r\n  }\r\n  // Auxiliary function for rendering the events in the calendar\r\n  function renderEventContent(eventInfo) {\r\n    return (\r\n      <>\r\n        <b>{eventInfo.timeText}</b>\r\n      </>\r\n    )\r\n  }\r\n  ","import React, { Component } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport momentPlugin from '@fullcalendar/moment'\r\n\r\n\r\nexport default class DoctorCalendar extends Component {\r\n\r\n    state={\r\n        doctor: {},\r\n        weekendsVisible: false,\r\n        currentEvents: [],\r\n        updatedField: {},\r\n        editing: false,\r\n        unedited: '',\r\n        appointments: [],\r\n        events:[]\r\n      }\r\n\r\n      componentDidMount(){\r\n        axios.get(`${API_URL}/doctor/${this.props.loggedInUser._id}`, {withCredentials: true})\r\n          .then((res)=>{\r\n            this.setState({doctor: res.data}, ()=>{console.log(this.state.doctor, new Date(this.state.doctor.openingTime))})\r\n          })\r\n          axios.get(`${API_URL}/doctor/appointments/${this.props.loggedInUser._id}`, {withCredentials: true})\r\n          .then((res)=>{\r\n            this.setState({appointments: res.data, events: res.data.map(appointment=>{return {title: appointment.reason, start:appointment.time, id:appointment.eventId, editable: false, patient: appointment.patient, appointment: appointment._id}})}, ()=>console.log(this.state)) \r\n          })\r\n      }\r\n\r\n      handleEventClick = (clickInfo) => {\r\n          console.log (clickInfo)\r\n        this.props.history.push(`/calendar/${clickInfo.event.extendedProps.appointment}`)\r\n         \r\n      }\r\n        \r\n      \r\n      handleEvents = (events) => {\r\n        this.setState({\r\n          currentEvents: events\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n          <>\r\n            <h1>Calendar</h1>\r\n\r\n            <FullCalendar\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, momentPlugin]}\r\n            headerToolbar={{\r\n              left: 'prev',\r\n              center: 'title',\r\n              right: 'next'\r\n            }}\r\n            titleFormat = 'DD/MM/YYYY'\r\n            initialView='timeGridDay'\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            allDaySlot= {false}\r\n            eventDurationEditable={false}\r\n            slotMinTime= '08:00'\r\n            slotMaxTime= '20:00'\r\n            businessHours = {{businessHours: {\r\n                // days of week. an array of zero-based day of week integers (0=Sunday)\r\n                daysOfWeek: [ 1, 2, 3, 4, 5 ], // Monday - Thursday\r\n\r\n                startTime: this.state.doctor.openingTime, // a start time (10am in this example)\r\n                endTime: this.state.doctor.closingTime, // an end time (6pm in this example)\r\n              }}}\r\n            weekends={this.state.weekendsVisible}\r\n            events={this.state.events} // alternatively, use the `events` setting to fetch from a feed\r\n            eventContent={renderEventContent} // custom render function\r\n            eventClick={this.handleEventClick}\r\n            eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n            defaultTimedEventDuration= '00:30'\r\n            />\r\n            \r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction renderEventContent(eventInfo) {\r\n    console.log (eventInfo.event)\r\n    return (\r\n      <div className='event-content'>\r\n        <b>{eventInfo.timeText}</b>\r\n        <i>{eventInfo.event.extendedProps.patient.username}</i>\r\n        <i>{eventInfo.event.title}</i>\r\n        </div>\r\n    )\r\n  }\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment';\r\n\r\n\r\nexport default class AppointmentDetails extends Component {\r\n  state={\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/doctor/appointment/${this.props.match.params.appointmentId}`, {withCredentials: true})\r\n    .then((res)=>this.setState({appointment: res.data}, ()=>console.log (this.state.appointment)))\r\n\r\n  }\r\n\r\n  cancelAppointment=(appointment)=>{\r\n    if (window.confirm(`Are you sure you want to cancel the appointment?`)){\r\n      axios.delete(`${API_URL}/cancel/${this.props.match.params.appointmentId}`, {withCredentials:true})\r\n      .then(()=>this.props.history.push('/calendar'))\r\n    }\r\n  }\r\n\r\n  toggleLoader=(e)=>{\r\n    e.classList.toggle('hidden-button')\r\n  }\r\n\r\n  loadReport=(e)=>{\r\n    let image = e.getElementsByTagName('INPUT')[0].files[0]\r\n    let uploadData = new FormData()\r\n    uploadData.append('imageUrl', image)\r\n    axios.post(`${API_URL}/upload`, uploadData)\r\n      .then((res)=> {console.log(res.data);axios.patch(`${API_URL}/append-report/${this.props.match.params.appointmentId}`, {report: res.data.image}, {withCredentials:true})})\r\n      .then(()=>this.toggleLoader(e))\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.state.appointment){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n  }\r\n  const{username, phoneNumber, email, allergies, history} = this.state.appointment.patient\r\n  const {time, reason} = this.state.appointment\r\n\r\n  let dateApp = moment(time).local().format('Do MMM YYYY')\r\n  let timeApp =  moment(time).local().format('HH:mm')\r\n  let timeToApp\r\n  (time > Date.now())? timeToApp=moment(time).local().toNow(): timeToApp=moment(time).local().fromNow()\r\n\r\n    return (\r\n      <>\r\n\r\n        <h1> Appointment Details</h1>\r\n\r\n        <div className=\"main-content appointment-details-card\">\r\n          \r\n          <div className=\"top-card-app-details\">\r\n            <p>On: {dateApp} at {timeApp}, {timeToApp}</p>\r\n            <p>Reason: {reason}</p>\r\n          </div>\r\n\r\n          <div className=\"bottom-card-app-details\">\r\n            <div>\r\n              <h3>Patient information</h3>\r\n              <p>Name: {username}</p>\r\n              <p>Phone: {phoneNumber}</p>\r\n              <p>Email: {email}</p>\r\n              <p>Allergies: {allergies}</p>\r\n              <p>Medical History: {history}</p>  \r\n            </div>\r\n\r\n            <div className=\"btn-app-details\">\r\n              <Link to={`/create-prescription/${this.props.match.params.appointmentId}`}><button className=\"button\">Create Prescription</button></Link>\r\n              {moment(this.state.appointment.time)>moment(Date.now())?\r\n              <button className=\"button\" onClick={()=>this.cancelAppointment(this.props.match.params.appointmentId)}>Cancel appointment</button>: <button disabled className=\"button disabled\" onClick={()=>this.cancelAppointment(this.props.match.params.appointmentId)}>Cancel appointment</button>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"report-upload\">\r\n            <button className=\"button\" onClick={()=>this.toggleLoader(document.getElementById('report-group'))}>{this.state.appointment.report? 'Replace Report':'Upload Report'}</button>\r\n\r\n            <div className='hidden-button' id='report-group'>\r\n              <input type='file' name='report' className=\"form-control\"/>\r\n              <button className=\"button\" onClick={()=>this.loadReport(document.getElementById('report-group'))}>Submit</button>\r\n            </div>\r\n\r\n            {(this.state.appointment.prescription)? <p>There is already a prescription associated to this appointment.</p>:null}\r\n\r\n          </div>\r\n                      \r\n      </div>\r\n\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PrescriptionItem extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <div className=\"added-med\">\r\n          <p><strong>Medication: </strong>{this.props.medication.name}</p>\r\n          <p><strong>Dose per take: </strong>{this.props.medication.dosePerTake}</p>\r\n          <p><strong>Takes per day: </strong>{this.props.medication.takesPerDay}</p>\r\n          <p><strong>Days per take: </strong>{this.props.medication.daysPerTake}</p>\r\n          <p><strong>Start date: </strong>{this.props.medication.startDate}</p>\r\n          <p><strong>End date: </strong>{this.props.medication.endDate}</p>\r\n          <p><strong>Comments: </strong>{this.props.medication.comments}</p>\r\n\r\n          <button className=\"button\" onClick={()=>this.props.onDelete(this.props.id)}>Delete</button> \r\n        </div>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PrescriptionForm extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <form className='prescription-form' onSubmit={this.props.onCommit}>\r\n        \r\n          <small>Please fill in all the fields</small>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Medication name </label>\r\n            <input name='name' id='name' type='text'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Dose per take </label>\r\n            <input name='dosePerTake' id='dosePerTake' type='text' placeholder='ex: 2 pills'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Takes per day </label>\r\n            <input name='takesPerDay' id='takesPerDay' type='number' min='0'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Days per take </label>\r\n            <input name='daysPerTake' id='daysPerTake' type='number' min='0'/>\r\n            <small>If the patient needs to take the medication every day, write 1. If once every two days, write 2 and so on.</small>\r\n\r\n          </div>\r\n          <div className=\"presription-inputs\">\r\n            <label>Start date </label>\r\n            <input name='startDate' id='startDate' min={Date.now().toLocaleString()} type='date' placeholder='When should the patient start the treatment?'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>End date </label>\r\n            <input name='endDate' id='endDate' type='date' placeholder='When should the patient stop the treatment?'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Comments </label>\r\n            <textarea name='comments' id='comments' type='text' placeholder='Additional comment' rows=\"3\" cols=\"30\"></textarea>\r\n          </div>\r\n\r\n          \r\n\r\n          <button className=\"add-med-btn\" type='submit'><img src=\"/images/btn-add.png\" alt=\"btn\"/></button>\r\n\r\n        </form>        \r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport PrescriptionItem from './PrescriptionItem'\r\nimport PrescriptionForm from './PrescriptionForm'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport moment from 'moment'\r\n\r\n \r\n\r\n\r\nexport default class CreatePrescription extends Component {\r\n\r\n  state={\r\n    prescription: {medications:[]}\r\n  }\r\n\r\n\r\n  handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    \r\n    const {name, dosePerTake, startDate, endDate, takesPerDay, daysPerTake, comments} = e.currentTarget\r\n    let newMedication ={\r\n      name: name.value, \r\n      dosePerTake: dosePerTake.value,\r\n      startDate: startDate.value,\r\n      endDate: endDate.value,\r\n      takesPerDay: takesPerDay.value,\r\n      daysPerTake: daysPerTake.value,\r\n      comments: comments.value}\r\n\r\n    if (moment(startDate.value).isBefore(moment(Date.now())) || takesPerDay<=0 || daysPerTake<=0){\r\n      alert('Impossible parameters. Please double check the prescription')\r\n      return\r\n\r\n    }\r\n    let clonePrescription= JSON.parse(JSON.stringify(this.state.prescription))\r\n    clonePrescription.medications.push(newMedication)\r\n    this.setState({prescription: clonePrescription})\r\n    let inputs = e.currentTarget.getElementsByTagName('INPUT')\r\n    // for (let input of inputs) input.value=''\r\n    \r\n  }\r\n\r\n  \r\n\r\n  handleDelete=(id)=>{\r\n    console.log(id)\r\n    let newPrescription= this.state.prescription.medications.filter((medication, index) => {\r\n      return index !== id\r\n    })\r\n    console.log ( newPrescription)\r\n    \r\n    this.setState({prescription: {medications: newPrescription}})\r\n\r\n  }\r\n\r\n  handleCreate=()=>{\r\n    console.log(this.state.prescription.medications)\r\n    axios.post(`${API_URL}/create-prescription/${this.props.match.params.appointmentId}`, {medications:\r\n      this.state.prescription.medications}, {withCredentials:true})\r\n      .then(res=> {\r\n        this.props.history.push('/calendar')\r\n      })\r\n      .catch(err=> {\r\n        console.log (err)\r\n        this.setState({errorMsg: 'Could not create prescription. Please check that everything is filled out and try again.'})})\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Prescription Form</h1>\r\n        \r\n        <div className=\"main-content prescrition-form-card\">\r\n\r\n          <PrescriptionForm onCommit={this.handleSubmit}/>\r\n\r\n          <button className=\"button save-pres-btn\" onClick={this.handleCreate}>Save prescription</button>\r\n\r\n          <div className=\"medications-added-card\">            \r\n            {(this.state.prescription.medications) ? this.state.prescription.medications.map((medication, id)=>{return <><PrescriptionItem key={id} id={id} medication={medication} onDelete={this.handleDelete}/> <hr/></>}): null\r\n            }\r\n          </div>\r\n\r\n          <p>{this.state.errorMsg}</p>          \r\n          \r\n\r\n        </div>\r\n\r\n       \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport SideBar from './components/SideBar'\r\nimport NavBar from './components/NavBar'\r\nimport HomePage from './components/HomePage'\r\nimport Signup from './components/Signup'\r\nimport Login from './components/Login'\r\nimport PatientProfile from './components/PatientProfile'\r\nimport PatientAppointments from './components/PatientAppointments'\r\nimport PatientMedPlanner from './components/PatientMedPlanner'\r\nimport DoctorProfile from './components/DoctorProfile'\r\nimport DoctorCalendar from './components/DoctorCalendar'\r\nimport AppointmentDetails from './components/AppointmentDetails'\r\n\r\n\r\nimport './App.css';\r\nimport {API_URL} from './config'\r\nimport axios from 'axios'\r\n\r\nimport {Switch, Route, withRouter, Redirect} from 'react-router-dom'\r\nimport CreatePrescription from './components/CreatePrescription';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    loggedInUser: null,\r\n    usertype: null,\r\n    errorMsg:'',\r\n    desiredUrl: null,\r\n    passwordStrength: ''\r\n  }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n    if (!this.state.loggedInUser){\r\n      axios.get(`${API_URL}/user`, {withCredentials: true})\r\n      .then((res) => {\r\n          this.setState({\r\n            loggedInUser: res.data.loggedInUser,\r\n            usertype: res.data.usertype\r\n          })\r\n        })\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n  handleSignUp = (e) => {\r\n    e.preventDefault();\r\n    const {email, password, usertype, username} = e.currentTarget;\r\n\r\n    axios.post(`${API_URL}/auth/signup`, {\r\n      username: username.value,\r\n      email: email.value,\r\n      password: password.value,\r\n      usertype: usertype.value,\r\n      // allergies: allergies.value,\r\n      // history: history.value\r\n      // to check if withCredentials is needed and state change\r\n    })\r\n      .then((res) => {\r\n        this.props.history.push('/login')\r\n      })\r\n      .catch(err=>{\r\n        this.setState({\r\n          errorMsg: err.response.data.errorMessage\r\n        }, ()=>console.log(this.state.errorMsg, err.response))\r\n      }) \r\n  }\r\n\r\n  \r\n  handleLogIn = (e) => {\r\n    e.preventDefault(); \r\n    const {email, password, usertype} = e.currentTarget;\r\n    axios.post(`${API_URL}/auth/login`, {\r\n      email: email.value, \r\n      password: password.value,\r\n      usertype: usertype.value\r\n    },  {withCredentials: true})\r\n      .then((res) => {\r\n        this.setState({\r\n          loggedInUser: res.data,\r\n          usertype: usertype.value,\r\n          errorMsg: null\r\n        }, () => {       \r\n          if (this.state.usertype === \"patient\"){\r\n            if (window.location.pathname.includes('doctor')){\r\n              this.props.history.push(window.location.pathname)\r\n            } \r\n            else if (!window.location.pathname.includes('doctor')) (this.props.history.push('/profile'))\r\n          } \r\n          else if (this.state.usertype === \"doctor\"){\r\n            this.props.history.push(`/doctor/${this.state.loggedInUser._id}`)\r\n          }\r\n        })\r\n      })\r\n      .catch(err=>{\r\n        this.setState({\r\n          errorMsg: err.response.data.error\r\n        })\r\n      }) \r\n  }\r\n\r\n\r\n\r\n  handleLogOut = (e) => {\r\n    //{withCredentials: true} is not false ???\r\n    axios.post(`${API_URL}/auth/logout`, {}, {withCredentials: true})\r\n      .then(() => {\r\n        this.setState({\r\n          loggedInUser: null,\r\n          usertype: null,\r\n          desiredUrl: null\r\n        }, ()=>{\r\n          this.props.history.push('/')\r\n        })\r\n      })    \r\n  }\r\n\r\n  handlePass=(e)=>{\r\n    let strength = 0\r\n    let lowerCase = new RegExp (/^(?=.*[a-z])/)\r\n    let upperCase = new RegExp (/(?=.*[A-Z])/)\r\n    let number = new RegExp (/(?=.*[0-9])/)\r\n    let especial = new RegExp (/(?=.*[!@#$%^&*])/)  \r\n    let amount = new RegExp (/(?=.{8,})/)\r\n    \r\n    let password= e.currentTarget.value\r\n    if (lowerCase.test(password)) {strength++}\r\n    if (upperCase.test(password)) {strength++}\r\n    if (number.test(password)) {strength++}\r\n    if (especial.test(password)) {strength++}\r\n    if (amount.test(password)) {strength++}\r\n    \r\n    if (strength===0) this.setState({passwordStrength: ''})\r\n    if (strength<3 && strength>0) this.setState({passwordStrength: 'Your password is too weak.'})\r\n    if (strength<5 && strength>=3) this.setState({passwordStrength: 'Almost there, you just need to increase your password strength a little more.'})\r\n    if (strength>=5) this.setState({passwordStrength: 'Your password is good to go!'})\r\n\r\n    if (e.currentTarget.value==='') this.setState({errorMsg: ''})\r\n  }\r\n\r\n  clearError=(e)=>{\r\n    if (e.currentTarget.value==='') this.setState({errorMsg: ''})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"body\">\r\n\r\n        <NavBar />\r\n                \r\n        {/* add condition to render only if logged in */}\r\n        <SideBar loggedInUser= {this.state.loggedInUser} usertype= {this.state.usertype} onLogout={this.handleLogOut}/>     \r\n\r\n        <Switch>\r\n\r\n          {/* Public routes */}\r\n          <Route exact path=\"/\" render={() => <HomePage  doctorList1={this.state.doctorList}/>}/>      \r\n\r\n\r\n          {/* Routes for logged out users */}\r\n          {(!this.state.loggedInUser) ?\r\n            <>\r\n              <Route path=\"/login\" render={() => <Login errorMsg={this.state.errorMsg} onClear={this.clearError} onLogIn={this.handleLogIn}/>}/> \r\n              <Route path=\"/signup\" render={() => <Signup onPass={this.handlePass} passwordStrength={this.state.passwordStrength} onClear={this.clearError} errorMsg={this.state.errorMsg} onSignUp={this.handleSignUp}/>}/>\r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <Login onClear={this.clearError} errorMsg={this.state.errorMsg} onLogIn={this.handleLogIn}/>}/>\r\n            </>\r\n            : null}\r\n          \r\n\r\n          {/* Routes for doctors */}\r\n          {(this.state.usertype==='doctor')?\r\n            <>\r\n              <Route exact path=\"/calendar\" render={(routeProps) => {\r\n                return <DoctorCalendar loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              <Route path=\"/calendar/:appointmentId\" render={(routeProps) => {\r\n                return <AppointmentDetails loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <DoctorProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }/>\r\n              <Route path=\"/create-prescription/:appointmentId\" render={routeProps=> <CreatePrescription loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }/>\r\n            </>\r\n            :null}\r\n\r\n \r\n          {/* Routes for patients */}\r\n          {(this.state.usertype==='patient')?\r\n            <>\r\n              <Route path=\"/profile\" render={(routeProps) => {\r\n                return <PatientProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n\r\n              <Route path=\"/appointments\" render={(routeProps) => {\r\n                return <PatientAppointments loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n\r\n              <Route path=\"/medication-planner\" render={(routeProps) => {\r\n                return <PatientMedPlanner loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              \r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <DoctorProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n            }/>\r\n            </>\r\n            : null }\r\n        \r\n           \r\n        </Switch>\r\n\r\n        <footer>\r\n          <h4><strong>Take care of your health!</strong></h4>\r\n        </footer>\r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}