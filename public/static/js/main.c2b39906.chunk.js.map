{"version":3,"sources":["components/NavBar.js","components/HomeSeachResult.js","config.js","components/HomePage.js","components/Signup.js","components/Login.js","components/PatientProfile.js","components/PatientAppointments.js","components/PatientMedPlanner.js","components/event-utils.js","components/DoctorProfile.js","components/DoctorCalendar.js","components/AppointmentDetails.js","components/Footer.js","components/PrescriptionItem.js","components/PrescriptionForm.js","components/CreatePrescription.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","src","alt","this","props","usertype","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","variant","Item","Link","href","onClick","onLogout","loggedInUser","_id","Component","HomeSeachResult","doctorList","map","doctor","picture","username","speciality","city","openingTime","closingTime","async","defer","type","API_URL","process","HomePage","state","doctors","filteredDoctors","specialityQuery","cityQuery","handleChange","e","docSearch","currentTarget","name","docSearchValue","value","setState","handleSearch","searchResult","filter","toLowerCase","includes","axios","get","then","res","data","onChange","placeholder","Signup","passwordStrength","displayError","onSubmit","onSignUp","htmlfor","onClear","onPass","errorMsg","Login","onLogIn","for","PatientProfile","patient","updatedField","editing","unedited","handleEnable","buttons","getElementsByTagName","readOnly","classList","toggle","field","handleDisable","handleEdit","d","keyName","Object","keys","values","patch","withCredentials","birthDate","height","weight","allergies","history","phoneNumber","address","email","autocomplete","document","getElementById","PatientAppointments","appointments","report","handleDownload","appointmentId","preventDefault","window","open","ordered","JSON","parse","stringify","sort","a","b","moment","time","appointment","timeToApp","dateApp","local","format","timeApp","Date","now","toNow","fromNow","reason","disabled","PatientMedPlanner","currentday","Axios","filteredmeds","prescriptions","prescription","medications","flat","medication","isBefore","endDate","startDate","diff","daysPerTake","currentmeds","subtract","add","previousDay","toString","nextDay","med","takesPerDay","dosePerTake","comments","eventGuid","createEventId","String","DoctorProfile","weekendsVisible","currentEvents","events","showError","showReason","showDelete","showLength","match","params","doctorId","handleImgEnable","handleImgEdit","uppicture","image","files","uploadData","FormData","append","post","handleDateSelect","selectInfo","calendarApi","view","calendar","unselect","startStr","end","start","handleEventClick","clickInfo","event","extendedProps","isAfter","eventDelete","handleEvents","appoCreate","eventId","title","appoEdit","appoCancel","delete","handleClose","handleCloseDelete","remove","handleCloseReason","addEvent","endStr","startEditable","editable","eventColor","proper","patient_id","color","phone","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","momentPlugin","headerToolbar","left","center","right","initialView","titleFormat","dayHeaderFormat","selectable","selectMirror","dayMaxEvents","allDaySlot","eventStartEditable","slotMinTime","slotMaxTime","businessHours","daysOfWeek","startTime","endTime","eventConstraint","weekends","select","eventContent","renderEventContent","eventClick","eventsSet","eventAdd","eventChange","eventRemove","defaultTimedEventDuration","Modal","show","onHide","Body","Footer","Button","eventInfo","timeText","DoctorCalendar","push","eventDurationEditable","AppointmentDetails","cancelAppointment","confirm","toggleLoader","loadReport","location","reload","PrescriptionItem","onDelete","PrescriptionForm","onCommit","min","toLocaleString","rows","cols","CreatePrescription","showCreate","showSubmit","handleSubmit","newMedication","clonePrescription","inputs","commentfield","handleDelete","newPrescription","index","handleCreate","catch","err","key","App","desiredUrl","handleSignUp","password","response","errorMessage","handleLogIn","pathname","error","handleLogOut","handlePass","strength","lowerCase","RegExp","upperCase","number","especial","amount","test","clearError","exact","path","render","doctorList1","routeProps","React","withRouter","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c2b39906.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Nav, Navbar} from 'react-bootstrap'\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n\r\n            <div className=\"navbar-all\">\r\n\r\n                <div className=\"navbar-logo\">\r\n                    <Link to=\"/\"><img src=\"../images/logo-transparent.png\" alt=\"logo\" className=\"header-logo\"/></Link>\r\n                </div>\r\n\r\n\r\n                <div className=\"navbar-menu\">\r\n\r\n                    {(this.props.usertype === \"patient\") ? (\r\n                        <>\r\n                            <Navbar expand=\"lg\">\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav variant=\"tabs\" className=\"mr-auto\">\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/\"><Nav.Link className=\"nav-link\" href='/'>Search doctor</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/profile\" ><Nav.Link className=\"nav-link\" href='/profile'>Profile</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/appointments\"><Nav.Link className=\"nav-link\" href='/appointments'>Appointments</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/medication-planner\"><Nav.Link className=\"nav-link\" href='/medication-planner'>Planner</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                <Nav.Link  onClick={this.props.onLogout}>Log Out</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {(this.props.usertype === \"doctor\") ? (            \r\n                        <>\r\n                            <Navbar expand=\"lg\">\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav variant=\"tabs\" className=\"mr-auto\">\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/calendar\"><Nav.Link className=\"nav-link\" href='/calendar'>Calendar</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to={`/doctor/${this.props.loggedInUser._id}`}><Nav.Link className=\"nav-link\" href={`/doctor/${this.props.loggedInUser._id}`}>Profile</Nav.Link></Link>\r\n                                </Nav.Item>     \r\n                                <Nav.Item className=\"nav-item\">\r\n                                <Nav.Link  onClick={this.props.onLogout}>LOG OUT</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {(!this.props.loggedInUser) ? (\r\n                        <>\r\n                            <Navbar expand=\"lg\">\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav variant=\"tabs\" className=\"mr-auto\">\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/signup\"><Nav.Link className=\"nav-link\" href='/signup'>SIGN UP</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to='/login'><Nav.Link className=\"nav-link\" href='/login'>LOG IN</Nav.Link></Link>\r\n                                </Nav.Item>     \r\n                            </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                        </>\r\n                    ) : null}\r\n                       \r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class HomeSeachResult extends Component {\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"main-content\">\r\n\r\n                {\r\n                    this.props.doctorList.map((doctor) => {\r\n                        return  (\r\n                            <div className=\"home-doctor-card\">\r\n\r\n                                <img className=\"doc-img\" src={doctor.picture} alt=\"profile picture\"/>\r\n                                <div className=\"search-doc-details-text\">\r\n                                    <p><strong>{doctor.username}</strong></p>\r\n                                    <p>{doctor.speciality}</p>\r\n                                    <p><em>{doctor.city}</em></p>\r\n                                    <p>From {doctor.openingTime} to {doctor.closingTime}</p>\r\n                                </div>                                \r\n\r\n                                <Link to={`/doctor/${doctor._id}`}>\r\n                                <button className=\"button\">Book an appointment</button>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                              \r\n                    })\r\n                }\r\n\r\n                <script async defer src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap\" type=\"text/javascript\"></script>\r\n                \r\n            </div>\r\n\r\n                \r\n        )\r\n    }\r\n}\r\n","\r\n\r\n//to be modified if needed, check w/ Rafa\r\n// process.env.REACT_APP_API_URL ||\r\n// || 'http://localhost:5000/api'\r\n\r\nexport const API_URL =   process.env.REACT_APP_API_URL ","import React, { Component } from 'react'\r\nimport HomeSeachResult from './HomeSeachResult'\r\n\r\nimport {API_URL} from '../config'\r\nimport axios from 'axios'\r\n\r\nexport default class HomePage extends Component {\r\n\r\n    state = {\r\n        doctors: [],\r\n        filteredDoctors: [],\r\n        specialityQuery: \"\",\r\n        cityQuery: \"\"\r\n        \r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        axios.get(`${API_URL}/doctor/search`)\r\n            .then((res) => {\r\n            this.setState({\r\n                doctors: res.data,\r\n                filteredDoctors: res.data\r\n            })\r\n        })\r\n    } \r\n    \r\n\r\n    handleChange = (e) => {\r\n        let docSearch = e.currentTarget.name\r\n        let docSearchValue = e.currentTarget.value\r\n        \r\n\r\n\r\n        if (docSearch === \"city\"){\r\n            this.setState({\r\n                cityQuery:  docSearchValue\r\n            }, ()=>this.handleSearch())\r\n        } else {\r\n            this.setState({\r\n                specialityQuery: docSearchValue\r\n            }, ()=>this.handleSearch())\r\n        }\r\n    }\r\n      \r\n\r\n\r\n    handleSearch = (e) => {\r\n\r\n        let searchResult = this.state.doctors.filter(doctor => {\r\n            if (!doctor.speciality || !doctor.city){\r\n                return false\r\n            } \r\n\r\n            return doctor.speciality.toLowerCase().includes(this.state.specialityQuery.toLowerCase()) \r\n            &&  doctor.city.toLowerCase().includes(this.state.cityQuery.toLowerCase()) \r\n\r\n        })\r\n\r\n        this.setState({\r\n            filteredDoctors: searchResult\r\n        })\r\n\r\n    }\r\n        \r\n\r\n\r\n    render() {\r\n        return (\r\n            <>                               \r\n\r\n                <div className=\"index-info-card\">\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/doctors.png\" alt=\"img\"/> \r\n                        <p>Thousands of doctors available on the platform.</p>\r\n                    </div>\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/online-booking.png\" alt=\"img\"/>\r\n                        <p>Easy online booking without struggle and 24/7!</p>\r\n                    </div>\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/prescription.png\" alt=\"img\"/>\r\n                        <p>Direct access to your prescriptions.</p>\r\n                    </div> \r\n                    \r\n                </div>  \r\n\r\n                <div className=\"home-search-bar\">\r\n                    <input className=\"input-search\" onChange={this.handleChange} name=\"speciality\" type=\"text\" placeholder=\"Search by speciality\"></input>\r\n                    <input className=\"input-search\" onChange={this.handleChange} name=\"city\" type=\"text\" placeholder=\"Search by city\"></input>\r\n                </div>\r\n\r\n             \r\n                {/* <MapContainer /> */}\r\n\r\n                <HomeSeachResult doctorList={this.state.filteredDoctors} />\r\n\r\n               \r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default class Signup extends Component {\r\n    state={\r\n        passwordStrength: '',\r\n        displayError: true\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Sign Up</h1>\r\n\r\n                <form onSubmit={this.props.onSignUp} className=\"main-content sign-log-form\">\r\n\r\n\r\n                    <div className=\"user-type-choice\">\r\n                        <label className=\"label-user\" htmlfor=\"usertype\">I am a </label> \r\n                        <select className=\"button\" name=\"usertype\">\r\n                            <option className=\"user-type-choice\" value=\"patient\">Patient</option> \r\n                            <option className=\"user-type-choice\" value=\"doctor\">Doctor</option>                            \r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <label className=\"login-label\">Full name</label>\r\n                    <input onChange={this.props.onClear} name=\"username\" type=\"text\"></input>\r\n\r\n                    <label className=\"login-label\">Email</label>\r\n                    <input onChange={this.props.onClear} name=\"email\" type=\"email\"></input>\r\n\r\n                    <label className=\"login-label\">Password</label>\r\n                    <em><small>Password needs to be at least 8 characters, and include both lower and upper cases, numbers and special signs.</small></em>\r\n                    <input onChange={this.props.onPass} name=\"password\" type=\"password\"></input>\r\n                    <small>{this.props.passwordStrength}</small>\r\n\r\n\r\n                    <div className=\"sign-log-btn-line\">\r\n                        <button className=\"button\" type=\"submit\">Submit</button>\r\n                        <Link to=\"/login\"><button className=\"button\">Or Log In!</button></Link>\r\n                    </div>                    \r\n\r\n                </form>\r\n\r\n\r\n                <p>{this.props.errorMsg}</p>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n    \r\n\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n\r\n            <>\r\n\r\n                <h1>Log In</h1>\r\n\r\n                <form onSubmit={this.props.onLogIn} className=\"main-content sign-log-form\">\r\n\r\n\r\n                    <div className=\"user-type-choice\">\r\n                        <label className=\"label-user\" for=\"usertype\">I am a </label>\r\n                        <select className=\"button\" name=\"usertype\">\r\n                            <option className=\"user-type-choice\" value=\"patient\">Patient</option>\r\n                            <option className=\"user-type-choice\" value=\"doctor\">Doctor</option>\r\n                            \r\n                        </select>\r\n                    </div>\r\n\r\n                    <label className=\"login-label\">Email</label>\r\n                    <input onChange={this.props.onClear} name=\"email\" type=\"email\"></input>\r\n\r\n                    <label className=\"login-label\">Password</label>\r\n                    <input onChange={this.props.onClear} name=\"password\" type=\"password\"></input>\r\n\r\n                    <div className=\"sign-log-btn-line\">\r\n                        <button className=\"button\" type=\"submit\">Submit</button>\r\n                        <Link to=\"/signup\"><button className=\"button\">Or Sign Up!</button></Link>\r\n                    </div>\r\n\r\n                    \r\n\r\n                </form>\r\n\r\n                <p>{this.props.errorMsg}</p>\r\n\r\n                \r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Login from \"./Login\"\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\n\r\nexport default class PatientProfile extends Component {\r\n\r\n  state={\r\n    patient: {},\r\n    updatedField: {},\r\n    editing: false,\r\n    unedited: '',\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/planner`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({\r\n          patient: res.data\r\n        })\r\n      })    \r\n  }\r\n  \r\n\r\n//Edit Profile methods\r\n\r\n  handleChange = (e) => {\r\n    const {name, value}= e.currentTarget\r\n    this.setState({\r\n        updatedField: {[name]: value}, \r\n        patient: {...this.state.patient, [name]:value}\r\n    })\r\n  }\r\n\r\n  handleEnable = (e)=>{\r\n    if (!this.state.editing){\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = false\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].value\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, unedited: field})\r\n    }\r\n  }\r\n  \r\n  handleDisable = (e)=>{\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = true\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].name\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, patient:  {...this.state.patient, [field]: this.state.unedited, updatedField:{}}})\r\n  }\r\n\r\n  handleEdit = (e, d) => {\r\n    let keyName= Object.keys(e)[0]\r\n    let value = Object.values(e)[0]\r\n    axios.patch(`${API_URL}/patient/${this.props.loggedInUser._id}`, {[keyName]: value}, {withCredentials:true})\r\n    // this.setState({\r\n\r\n\r\n    // })\r\n    let buttons = d.getElementsByTagName('BUTTON')\r\n    d.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing})\r\n  }\r\n\r\n\r\n \r\n  render() {\r\n    if (!this.props.loggedInUser){\r\n      return <Login />\r\n    }\r\n\r\n    if (!this.state.patient){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n    }\r\n\r\n\r\n    const {username, birthDate, height, weight, allergies, history, phoneNumber, address, email} = this.state.patient\r\n\r\n    return (\r\n      <>\r\n        <h1>Profile</h1>\r\n\r\n\r\n        <div className=\"main-content profile-page-content\">\r\n\r\n          <div className=\"profile-field\" id='name-profile'>\r\n            <label className=\"profile-label\"><strong>Full Name</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"username\" type=\"text\" value={username}  onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n            <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='birthDate-profile'>\r\n            <label className=\"profile-label\"><strong>Birth Date</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"birthDate\" type=\"text\" value={birthDate}  onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n    \r\n          <div className=\"profile-field\" id='address-profile'>\r\n            <label className=\"profile-label\"><strong>Address</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"address\" type=\"text\" value={address} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='email-profile'>\r\n            <label className=\"profile-label\"><strong>E-Mail</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"email\"  type=\"email\" value={email} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>  \r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='phoneNumber-profile'>\r\n            <label className=\"profile-label\"><strong>Telephone</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"phoneNumber\" type=\"text\" value={phoneNumber} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='height-profile'>\r\n            <label className=\"profile-label\"><strong>Height (cm)</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"height\" type=\"text\" value={height} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='weight-profile'>\r\n            <label className=\"profile-label\"><strong>Weight (kg)</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"weight\" type=\"text\" value={weight} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='allergies-profile'>\r\n            <label className=\"profile-label\"><strong>Allergies</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"allergies\" type=\"text\" value={allergies} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n            <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='history-profile'>\r\n            <label className=\"profile-label\"><strong>Medical History</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"history\" type=\"text\" value={history} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        \r\n\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n  \r\n\r\n  ","import React, { Component } from 'react';\r\nimport {API_URL} from '../config';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nexport default class PatientAppointments extends Component {\r\n\r\n\r\n    state = {\r\n        loggedInUser: this.props.loggedInUser,\r\n        usertype: this.props.usertype,\r\n        appointments: null,\r\n        report: null,\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount(){\r\n        axios.get(`${API_URL}/patient/appointments` , {withCredentials: true})\r\n        .then((res) => {\r\n            let ordered = JSON.parse(JSON.stringify(res.data))\r\n            ordered.sort((a, b)=> moment(b.time) - moment(a.time)) \r\n            this.setState({\r\n            appointments: ordered           \r\n            })\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    \r\n    handleDownload = (e, appointmentId) => {\r\n        e.preventDefault();\r\n        axios.get(`${API_URL}/patient/appointment/report/${appointmentId}`, {withCredentials: true})\r\n        .then((res) => {\r\n            this.setState({\r\n                report: res.data.report,\r\n            })\r\n            window.open(this.state.report, '_blank')\r\n\r\n        })    \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        if (!this.state.appointments){\r\n            return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <h1>Appointments</h1>\r\n\r\n                {\r\n                    this.state.appointments.map(appointment => {\r\n\r\n                        let dateApp = moment(appointment.time).local().format('Do MMM YYYY')\r\n                        let timeApp =  moment(appointment.time).local().format('HH:mm')\r\n                        let timeToApp\r\n                        (appointment.time > Date.now()) ? timeToApp=moment(appointment.time).local().toNow(): timeToApp=moment(appointment.time).local().fromNow()\r\n\r\n                        return (\r\n                            <div className=\"main-content\">  \r\n\r\n                                <div className=\"appointment-card\">\r\n                                    <div>\r\n                                        <p><strong>On: {dateApp} at {timeApp}, {timeToApp}</strong></p>\r\n\r\n                                        <p>With <strong>Dr. {appointment.doctor.username}</strong></p>\r\n                                        <p><strong>Specialized in: </strong>{appointment.doctor.speciality}</p>\r\n                                        <p><strong>Purpose: </strong>{appointment.reason}</p>\r\n                                        <p><strong>Located at: </strong>{appointment.doctor.address}</p>\r\n                                    </div>\r\n\r\n                                             \r\n                                        { appointment.report? \r\n                                            \r\n                                                <button className=\"button\" onClick={(e) => this.handleDownload(e, appointment._id)}>See Report</button>:\r\n                                                <button className=\"button disabled\" disabled>No Report</button>\r\n\r\n                                                }\r\n                                     \r\n                                </div>\r\n                            </div>\r\n                        )                      \r\n                    })\r\n\r\n                }    \r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport moment from 'moment'\r\n\r\nexport default class PatientMedPlanner extends Component {\r\n\r\n    state={\r\n        patient:{},\r\n        currentday: moment(Date.now()) \r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(`${API_URL}/planner`, {withCredentials:true})\r\n            .then((res)=>{\r\n                this.setState({patient: res.data}, ()=>{\r\n                    let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n                    let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n                    this.setState({currentmeds: filteredmeds})\r\n                })\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    previousDay(){\r\n        this.setState({currentday: this.state.currentday.subtract(1, 'day')})\r\n        let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n        let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n        this.setState({currentmeds: filteredmeds})\r\n    }\r\n\r\n    nextDay(){\r\n        this.setState({currentday: this.state.currentday.add(1, 'day')})\r\n        let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n        let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n        this.setState({currentmeds: filteredmeds})\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.currentmeds){\r\n            return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n          }\r\n\r\n        return (\r\n            <>\r\n                <h4>Medication Planner</h4>\r\n\r\n                <div className=\"patient-cal-date-field\">\r\n                    <button className=\"button calendar-day\" onClick={()=>this.previousDay()}>&lt;</button>\r\n                    <h4>{this.state.currentday.format(\"Do MMM, YYYY\").toString()}</h4>\r\n                    <button className=\"button calendar-day\" onClick={()=>this.nextDay()}>&gt;</button>\r\n                </div>\r\n\r\n                <div className=\"main-content patient-cal-day-times\">\r\n\r\n                    <h4 className=\"time-planner\">Morning</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===2){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                    <hr/>\r\n\r\n                    <h4 className=\"time-planner\">Noon</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===1){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                    <hr/>\r\n\r\n                    <h4 className=\"time-planner\">Night</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===2){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n","let eventGuid = 0\r\n\r\nexport function createEventId() {\r\n  return String(eventGuid++)\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport { createEventId } from './event-utils'\r\nimport moment from 'moment'\r\nimport momentPlugin from '@fullcalendar/moment'\r\nimport {Button, Modal} from 'react-bootstrap'\r\n\r\n\r\n\r\nexport default class DoctorProfile extends Component {\r\n\r\n  state={\r\n    doctor: {},\r\n    weekendsVisible: false,\r\n    currentEvents: [],\r\n    updatedField: {},\r\n    editing: false,\r\n    unedited: '',\r\n    appointments: [],\r\n    events:[],\r\n    showError:false,\r\n    showReason:false,\r\n    showDelete: false,\r\n    showLength: false,\r\n  }\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({doctor: res.data})\r\n      })\r\n      axios.get(`${API_URL}/doctor/appointments/${this.props.match.params.doctorId}`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({appointments: res.data, events: res.data.map(appointment=>{\r\n          let eventColor= appointment.patient._id===this.props.loggedInUser._id? '#51B8F9': 'gray'\r\n          let proper = appointment.patient_id===this.props.loggedInUser._id? true : false\r\n          return {title: appointment.reason, start:appointment.time, id:appointment.eventId, startEditable: proper, patient: appointment.patient, color: eventColor}})}\r\n         ) \r\n      })\r\n      \r\n  }\r\n  \r\n\r\n//Edit Profile methods\r\n\r\n  handleChange = (e) => {\r\n    const {name, value}= e.currentTarget\r\n    this.setState({\r\n        updatedField: {[name]: value}, \r\n        doctor:{...this.state.doctor, [name]:value}\r\n    })\r\n  }\r\n\r\n  handleEnable = (e)=>{\r\n    if (!this.state.editing){\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = false\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].value\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, unedited: field})\r\n    }\r\n  }\r\n  \r\n  handleDisable = (e)=>{\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = true\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].name\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, doctor: {...this.state.doctor, [field]: this.state.unedited, updatedField:{}}})\r\n  }\r\n\r\n  handleEdit = (e, d) => {\r\n    let keyName= Object.keys(e)[0]\r\n    let value = Object.values(e)[0]\r\n    axios.patch(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {[keyName]: value}, {withCredentials:true})\r\n    let buttons = d.getElementsByTagName('BUTTON')\r\n    d.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing})\r\n  }\r\n\r\n  handleImgEnable= (e)=>{\r\n      e.getElementsByTagName('INPUT')[0].classList.toggle('hidden-button')\r\n      e.getElementsByTagName('BUTTON')[1].classList.toggle('hidden-button')\r\n      this.setState({editing: !this.state.editing})\r\n  }\r\n\r\n  handleImgEdit =(e)=>{\r\n    if (e){\r\n    let image = e.getElementsByTagName('INPUT')[0].files[0]\r\n    let uploadData = new FormData()\r\n    uploadData.append('imageUrl', image)\r\n    let uppicture\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('hidden-button')\r\n    e.getElementsByTagName('BUTTON')[1].classList.toggle('hidden-button')\r\n    axios.post(`${API_URL}/upload`, uploadData)\r\n    .then((res)=> {uppicture= res.data.image; axios.patch(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {picture: res.data.image}, {withCredentials:true})})\r\n    .then((res)=>{this.setState({doctor:{...this.state.doctor, picture: uppicture}})})\r\n    \r\n  }}\r\n\r\n  //Calendar methods \r\n  handleDateSelect = (selectInfo) => {\r\n    let calendarApi = selectInfo.view.calendar\r\n    calendarApi.unselect()\r\n    if (!moment(new Date(selectInfo.startStr)).isBefore(Date.now())) {\r\n      \r\n      if (selectInfo.end-selectInfo.start>1800000) {\r\n        this.setState({showLength: true})\r\n        return\r\n      }\r\n    this.setState({showReason:true, calendarApi: calendarApi, selectInfo: selectInfo})\r\n    // let title = prompt('Please enter the reason for the appointment: ')\r\n    // if (title) {\r\n    //   calendarApi.addEvent({\r\n    //     id: createEventId(),\r\n    //     title,\r\n    //     start: selectInfo.startStr,\r\n    //     end: selectInfo.endStr,\r\n    //     patient: this.props.loggedInUser._id,\r\n    //     startEditable: true,\r\n    //     editable: false\r\n    //   })\r\n    // }\r\n  }\r\n    else{\r\n      this.setState({showError:true})\r\n    }\r\n  }\r\n  \r\n  handleEventClick = (clickInfo) => {\r\n    if ((clickInfo.event.extendedProps.patient._id === this.props.loggedInUser._id || clickInfo.event.extendedProps.patient === this.props.loggedInUser._id)\r\n      && moment(clickInfo.event.startStr).isAfter(moment(Date.now()))\r\n      ){\r\n      // if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`))   {clickInfo.event.remove()}\r\n      this.setState({showDelete: true, eventDelete: clickInfo.event})\r\n     \r\n  }}\r\n  \r\n  handleEvents = (events) => {\r\n    this.setState({\r\n      currentEvents: events\r\n    })\r\n  }\r\n\r\n  //Linking of calendar with database\r\n  appoCreate= (event) =>{\r\n    axios.post(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}`, \r\n      {time: event.event.start, eventId: event.event.id, reason: event.event.title}, {withCredentials:true})\r\n  }\r\n\r\n  appoEdit= (event) =>{\r\n    axios.patch(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}`, \r\n      {time: event.event.start, eventId: event.event.id, reason: event.event.title}, {withCredentials:true})\r\n  }\r\n\r\n  appoCancel= (event) =>{\r\n    axios.delete(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}/${event.event.id}`, {withCredentials:true})\r\n  }\r\n\r\n  handleClose=()=>{\r\n    this.setState({showError: false, showReason: false, showDelete: false, showLength: false})\r\n  }\r\n\r\n  handleCloseDelete=()=>{\r\n    this.setState({showDelete: false})\r\n    this.state.eventDelete.remove()\r\n    this.setState({eventDelete: {}})\r\n  }\r\n\r\n  handleCloseReason=(title)=>{\r\n    if (title) {\r\n      this.state.calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: this.state.selectInfo.startStr,\r\n        end: this.state.selectInfo.endStr,\r\n        patient: this.props.loggedInUser._id,\r\n        startEditable: true,\r\n        editable: false\r\n      })\r\n    }\r\n    this.setState({showReason:false})\r\n  }\r\n  \r\n  \r\n  render() {\r\n\r\n    \r\n\r\n    if (!this.state.doctor){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n    }\r\n    \r\n    const {username, speciality, city, address, email, phone, openingTime, closingTime, picture} = this.state.doctor\r\n \r\n    return (\r\n      //Profile\r\n      <>\r\n\r\n        <h1>Doctor Profile</h1>\r\n\r\n        <div className=\"main-content profile-page-content\">\r\n\r\n          <div className=\"profile-field profile-field-img\" id='image-profile'>\r\n              <img src={picture} alt='' className=\"doc-img\"/>\r\n              {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n                <>\r\n                  <button className=\"edit-profile\" onClick={()=>this.handleImgEnable(document.getElementById('image-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                  <input  autocomplete=\"off\" type=\"file\" className=\"form-control hidden-button\" name=\"image\" id=\"image\" />\r\n                <button type='submit' className='hidden-button edit-profile' onClick={()=>this.handleImgEdit(document.getElementById('image-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n                </>\r\n              :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='name-profile'>\r\n            <label className=\"profile-label\"><strong>Name</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"username\" type=\"text\" value={username}  onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='speciality-profile'>\r\n            <label className=\"profile-label\"><strong>Speciality</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"speciality\" type=\"text\" value={speciality}  onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='city-profile'>\r\n            <label className=\"profile-label\"><strong>City</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"city\" type=\"text\" value={city} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n          :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='address-profile'>\r\n            <label className=\"profile-label\"><strong>Address</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"address\" type=\"text\" value={address} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='email-profile'>\r\n            <label className=\"profile-label\"><strong>E-Mail</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"email\"  type=\"email\" value={email} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>  \r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='phone-profile'>\r\n            <label className=\"profile-label\"><strong>Telephone</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"phone\" type=\"text\" value={phone} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}        \r\n          </div>\r\n          \r\n          <div className=\"profile-field\" id='opening-profile'>\r\n            <label className=\"profile-label\"><strong>Opening time</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"openingTime\" type=\"text\" value={openingTime} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n          \r\n          <div className=\"profile-field\" id='closing-profile'>\r\n            <label className=\"profile-label\"><strong>Closing time</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"closingTime\" type=\"text\" value={closingTime} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"booking-card\">\r\n\r\n            {(this.props.usertype==='patient') ? (\r\n              <>\r\n\r\n                <div className=\"booking-instr-card\">\r\n\r\n                  <h4>Booking Instructions</h4>\r\n                  \r\n                  <ul className=\"booking-instructions-text\">\r\n                    <li>Select the time slot by clicking on it</li>\r\n                    <li>A pop-up appears, enter the purpose of the appointment</li>\r\n                    <li>Click \"ok\" to valid the booking</li>\r\n                    <li>You can:</li>\r\n                    <ul>\r\n                      <li>Modify the appointment time and date by dragging it to another available slot</li> \r\n                      <li>Cancel the appointment, by clicking on it a pop will appear to confirm the cancellation</li>\r\n                    </ul>                \r\n                  </ul>\r\n\r\n                </div>\r\n                \r\n\r\n\r\n                <div className=\"calendar-card\">\r\n\r\n\r\n                  <FullCalendar\r\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, momentPlugin]}\r\n                    headerToolbar={{\r\n                      left: 'prev',\r\n                      center: 'title',\r\n                      right: 'next'\r\n                    }}\r\n                    initialView='timeGridWeek'\r\n                    titleFormat = 'Do MMM YYYY'\r\n                    dayHeaderFormat = 'DD/MM'\r\n                    selectable={true}\r\n                    selectMirror={false}\r\n                    dayMaxEvents={true}\r\n                    allDaySlot= {false}\r\n                    eventStartEditable={true}\r\n                    slotMinTime= '08:00'\r\n                    slotMaxTime= '20:00'\r\n                    businessHours = {{\r\n                      daysOfWeek: [ 1, 2, 3, 4, 5 ], \r\n                      startTime: this.state.doctor.openingTime, \r\n                      endTime: this.state.doctor.closingTime, \r\n                    }}\r\n                    eventConstraint= {{\r\n                      start: Date.now(),\r\n                      end: '2100-01-01',\r\n                      businessHours: {\r\n                      daysOfWeek: [ 1, 2, 3, 4, 5 ], \r\n                      startTime: this.state.doctor.openingTime, \r\n                      endTime: this.state.doctor.closingTime, \r\n                      }\r\n                    }}\r\n                    weekends={this.state.weekendsVisible}\r\n                    events={this.state.events} \r\n                    select={this.handleDateSelect}\r\n                    eventContent={renderEventContent} \r\n                    eventClick={this.handleEventClick}\r\n                    eventsSet={this.handleEvents} \r\n                    eventAdd={(event)=>this.appoCreate(event)}\r\n                    eventChange={(event)=>this.appoEdit(event)}\r\n                    eventRemove={(event)=>this.appoCancel(event)}\r\n                    defaultTimedEventDuration= '00:30'\r\n                  />\r\n                </div>\r\n              </>\r\n              )\r\n              :null}\r\n\r\n          </div>     \r\n\r\n          <Modal show={this.state.showError} onHide={this.handleClose}>\r\n            <Modal.Body>Please enter a valid date.</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleClose}>\r\n                OK\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.showLength} onHide={this.handleClose}>\r\n            <Modal.Body>Appointments can't be longer than thirty minutes.</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleClose}>\r\n                OK\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.showDelete} onHide={this.handleClose}>\r\n            <Modal.Body>Are you sure you want to cancel your appointment?</Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n                BACK\r\n              </Button>\r\n              <Button variant=\"danger\" onClick={this.handleCloseDelete}>\r\n                I AM SURE\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.showReason} onHide={this.handleClose}>\r\n            <Modal.Body>\r\n            <p>What is the reason for your appointment?</p>\r\n            <input name='reason' id='reasonAppo'></input></Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleClose}>\r\n                BACK\r\n              </Button>\r\n              <Button variant=\"success\" onClick={()=>this.handleCloseReason(document.getElementById('reasonAppo').value)}>\r\n                OK\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          \r\n\r\n        </div>     \r\n                   \r\n      </>        \r\n      )\r\n    \r\n    }\r\n  }\r\n  // Auxiliary function for rendering the events in the calendar\r\n  function renderEventContent(eventInfo) {\r\n    return (\r\n      <>\r\n        <b>{eventInfo.timeText}</b>\r\n      </>\r\n    )\r\n  }\r\n  ","import React, { Component } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport momentPlugin from '@fullcalendar/moment'\r\n\r\n\r\nexport default class DoctorCalendar extends Component {\r\n    state={\r\n        doctor: {},\r\n        weekendsVisible: false,\r\n        currentEvents: [],\r\n        updatedField: {},\r\n        editing: false,\r\n        unedited: '',\r\n        appointments: [],\r\n        events:[]\r\n      }\r\n      componentDidMount(){\r\n        axios.get(`${API_URL}/doctor/${this.props.loggedInUser._id}`, {withCredentials: true})\r\n          .then((res)=>{\r\n            this.setState({doctor: res.data})\r\n          })\r\n          axios.get(`${API_URL}/doctor/appointments/${this.props.loggedInUser._id}`, {withCredentials: true})\r\n          .then((res)=>{\r\n            this.setState({appointments: res.data, events: res.data.map(appointment=>{return {title: appointment.reason, start:appointment.time, id:appointment.eventId, editable: false, patient: appointment.patient, appointment: appointment._id}})}) \r\n          })\r\n      }\r\n      handleEventClick = (clickInfo) => {\r\n        this.props.history.push(`/calendar/${clickInfo.event.extendedProps.appointment}`)\r\n      }\r\n      handleEvents = (events) => {\r\n        this.setState({\r\n          currentEvents: events\r\n        })\r\n      }\r\n    render() {\r\n        return (\r\n          <>\r\n            <h1>Calendar</h1>\r\n\r\n            <FullCalendar\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, momentPlugin]}\r\n            headerToolbar={{\r\n              left: 'prev',\r\n              center: 'title',\r\n              right: 'next'\r\n            }}\r\n            titleFormat = 'DD/MM/YYYY'\r\n            initialView='timeGridDay'\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            allDaySlot= {false}\r\n            eventDurationEditable={false}\r\n            slotMinTime= '08:00'\r\n            slotMaxTime= '20:00'\r\n            businessHours = {{businessHours: {\r\n                daysOfWeek: [ 1, 2, 3, 4, 5 ], \r\n                startTime: `${this.state.doctor.openingTime}`,\r\n                endTime: this.state.doctor.closingTime,\r\n              }}}\r\n            weekends={this.state.weekendsVisible}\r\n            events={this.state.events} \r\n            eventContent={renderEventContent} \r\n            eventClick={this.handleEventClick}\r\n            eventsSet={this.handleEvents} \r\n            defaultTimedEventDuration= '00:30'\r\n            />\r\n            \r\n          </>\r\n        )\r\n    }\r\n}\r\nfunction renderEventContent(eventInfo) {\r\n    return (\r\n      <div className='event-content'>\r\n        <b>{eventInfo.timeText}</b>\r\n        <i>{eventInfo.event.extendedProps.patient.username}</i>\r\n        <i>{eventInfo.event.title}</i>\r\n        </div>\r\n    )\r\n  }","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment';\r\n\r\n\r\nexport default class AppointmentDetails extends Component {\r\n  state={\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/doctor/appointment/${this.props.match.params.appointmentId}`, {withCredentials: true})\r\n    .then((res)=>this.setState({appointment: res.data}))\r\n\r\n  }\r\n\r\n  cancelAppointment=(appointment)=>{\r\n    if (window.confirm(`Are you sure you want to cancel the appointment?`)){\r\n      axios.delete(`${API_URL}/cancel/${this.props.match.params.appointmentId}`, {withCredentials:true})\r\n      .then(()=>this.props.history.push('/calendar'))\r\n    }\r\n  }\r\n\r\n  toggleLoader=(e)=>{\r\n    e.classList.toggle('hidden-button')\r\n  }\r\n\r\n  loadReport=(e)=>{\r\n    let image = e.getElementsByTagName('INPUT')[0].files[0]\r\n    let uploadData = new FormData()\r\n    uploadData.append('imageUrl', image)\r\n    axios.post(`${API_URL}/upload`, uploadData)\r\n      .then((res)=> {axios.patch(`${API_URL}/append-report/${this.props.match.params.appointmentId}`, {report: res.data.image}, {withCredentials:true})})\r\n      .then(()=>{\r\n      this.toggleLoader(e)\r\n      window.location.reload()\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.state.appointment){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n  }\r\n    const{username, phoneNumber, email, allergies, history} = this.state.appointment.patient\r\n    const {time, reason} = this.state.appointment\r\n\r\n    let dateApp = moment(time).local().format('Do MMM YYYY')\r\n    let timeApp =  moment(time).local().format('HH:mm')\r\n    let timeToApp\r\n    (time > Date.now())? timeToApp=moment(time).local().toNow(): timeToApp=moment(time).local().fromNow()\r\n\r\n    return (\r\n      <>\r\n\r\n        <h1> Appointment Details</h1>\r\n\r\n        <div className=\"main-content appointment-details-card\">\r\n          \r\n          <div className=\"top-card-app-details\">\r\n            <p>On: {dateApp} at {timeApp}, {timeToApp}</p>\r\n            <p>Reason: {reason}</p>\r\n          </div>\r\n\r\n          <div className=\"bottom-card-app-details\">\r\n            <div>\r\n              <h3>Patient information</h3>\r\n              <p>Name: {username}</p>\r\n              <p>Phone: {phoneNumber}</p>\r\n              <p>Email: {email}</p>\r\n              <p>Allergies: {allergies}</p>\r\n              <p>Medical History: {history}</p>  \r\n            </div>\r\n\r\n            <div className=\"btn-app-details\">\r\n            {!(this.state.appointment.prescription)? \r\n              <Link to={`/create-prescription/${this.props.match.params.appointmentId}`}><button className=\"button\">Create Prescription</button></Link>\r\n              :<button disabled className=\"button disabled\">Prescription added</button>}\r\n            \r\n              \r\n              \r\n              {moment(this.state.appointment.time)>moment(Date.now())?\r\n              <button className=\"button\" onClick={()=>this.cancelAppointment(this.props.match.params.appointmentId)}>Cancel appointment</button>: <button disabled className=\"button disabled\" onClick={()=>this.cancelAppointment(this.props.match.params.appointmentId)}>Cancel appointment</button>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"report-upload\">\r\n            <button className=\"button\" onClick={()=>this.toggleLoader(document.getElementById('report-group'))}>{this.state.appointment.report? 'Replace Report':'Upload Report'}</button>\r\n\r\n            <div className='hidden-button' id='report-group'>\r\n              <input type='file' name='report' className=\"form-control\"/>\r\n              <button className=\"button\" onClick={()=>this.loadReport(document.getElementById('report-group'))}>Submit</button>\r\n            </div>\r\n\r\n            {/* {(this.state.appointment.prescription)? <p>There is already a prescription associated to this appointment.</p>:null} */}\r\n\r\n          </div>\r\n                      \r\n      </div>\r\n\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <footer>\r\n          <h4><strong>Take care of your health!</strong></h4>\r\n        </footer>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PrescriptionItem extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <div className=\"added-med\">\r\n          <p><strong>Medication: </strong>{this.props.medication.name}</p>\r\n          <p><strong>Dose per take: </strong>{this.props.medication.dosePerTake}</p>\r\n          <p><strong>Takes per day: </strong>{this.props.medication.takesPerDay}</p>\r\n          <p><strong>Days per take: </strong>{this.props.medication.daysPerTake}</p>\r\n          <p><strong>Start date: </strong>{this.props.medication.startDate}</p>\r\n          <p><strong>End date: </strong>{this.props.medication.endDate}</p>\r\n          <p><strong>Comments: </strong>{this.props.medication.comments}</p>\r\n\r\n          <button className=\"button\" onClick={()=>this.props.onDelete(this.props.id)}>Delete</button> \r\n        </div>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PrescriptionForm extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <form className='prescription-form' onSubmit={this.props.onCommit}>\r\n        \r\n          <small>Please fill in all the fields</small>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Medication name </label>\r\n            <input name='name' id='name' type='text'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Dose per take </label>\r\n            <input name='dosePerTake' id='dosePerTake' type='text' placeholder='ex: 2 pills'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Takes per day </label>\r\n            <input name='takesPerDay' id='takesPerDay' type='number' min='0'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Days per take </label>\r\n            <input name='daysPerTake' id='daysPerTake' type='number' min='0'/>\r\n            <small>If the patient needs to take the medication every day, write 1. If once every two days, write 2 and so on.</small>\r\n\r\n          </div>\r\n          <div className=\"presription-inputs\">\r\n            <label>Start date </label>\r\n            <input name='startDate' id='startDate' min={Date.now().toLocaleString()} type='date' placeholder='When should the patient start the treatment?'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>End date </label>\r\n            <input name='endDate' id='endDate' type='date' placeholder='When should the patient stop the treatment?'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Comments </label>\r\n            <textarea name='comments' id='comments' type='text' placeholder='Additional comment' rows=\"3\" cols=\"30\"></textarea>\r\n          </div>\r\n\r\n          \r\n\r\n          <button className=\"add-med-btn\" type='submit'><img src=\"/images/btn-add.png\" alt=\"btn\"/></button>\r\n\r\n        </form>        \r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport PrescriptionItem from './PrescriptionItem'\r\nimport PrescriptionForm from './PrescriptionForm'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport moment from 'moment'\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\n\r\n\r\n \r\n\r\n\r\nexport default class CreatePrescription extends Component {\r\n\r\n  state={\r\n    prescription: {medications:[]},\r\n    showCreate: false,\r\n    showSubmit: false\r\n  }\r\n\r\n\r\n  handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    \r\n    const {name, dosePerTake, startDate, endDate, takesPerDay, daysPerTake, comments} = e.currentTarget\r\n    let newMedication ={\r\n      name: name.value, \r\n      dosePerTake: dosePerTake.value,\r\n      startDate: startDate.value,\r\n      endDate: endDate.value,\r\n      takesPerDay: takesPerDay.value,\r\n      daysPerTake: daysPerTake.value,\r\n      comments: comments.value}\r\n\r\n    if (moment(startDate.value).isBefore(moment(Date.now())) || takesPerDay<=0 || daysPerTake<=0){\r\n      this.setState({showSubmit: true})\r\n      return\r\n\r\n    }\r\n    let clonePrescription= JSON.parse(JSON.stringify(this.state.prescription))\r\n    clonePrescription.medications.push(newMedication)\r\n    this.setState({prescription: clonePrescription})\r\n    let inputs = e.currentTarget.getElementsByTagName('INPUT')\r\n    let commentfield = e.currentTarget.getElementsByTagName('TEXTAREA')[0]\r\n    for (let input of inputs) input.value=''\r\n    commentfield.value= ''\r\n    \r\n  }\r\n\r\n  \r\n\r\n  handleDelete=(id)=>{\r\n    let newPrescription= this.state.prescription.medications.filter((medication, index) => {\r\n      return index !== id\r\n    })\r\n    this.setState({prescription: {medications: newPrescription}})\r\n  }\r\n\r\n  handleCreate=()=>{\r\n    axios.post(`${API_URL}/create-prescription/${this.props.match.params.appointmentId}`, {medications:\r\n      this.state.prescription.medications}, {withCredentials:true})\r\n      .then(res=> {\r\n        this.props.history.push(`/calendar/${this.props.match.params.appointmentId}`)\r\n      })\r\n      .catch(err=> {\r\n        this.setState({showCreate: true})\r\n      })\r\n  }\r\n\r\n  handleClose=()=>{\r\n    this.setState({showCreate: false, showSubmit: false})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Prescription Form</h1>\r\n        \r\n        <div className=\"main-content prescrition-form-card\">\r\n\r\n          <PrescriptionForm onCommit={this.handleSubmit}/>\r\n\r\n          <button className=\"button save-pres-btn\" onClick={this.handleCreate}>Save prescription</button>\r\n\r\n          <div className=\"medications-added-card\">            \r\n            {(this.state.prescription.medications) ? this.state.prescription.medications.map((medication, id)=>{return <><PrescriptionItem key={id} id={id} medication={medication} onDelete={this.handleDelete}/> <hr/></>}): null\r\n            }\r\n          </div>\r\n\r\n          <p>{this.state.errorMsg}</p>   \r\n\r\n          <Modal show={this.state.showCreate} onHide={this.handleClose}>\r\n            <Modal.Body>All fields except for the comments are mandatory.</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleClose}>\r\n                In understood\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.showSubmit} onHide={this.handleClose}>\r\n            <Modal.Body>Impossible parameters. Please double check the prescription</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleClose}>\r\n                In understood\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          \r\n\r\n        </div>\r\n\r\n       \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar'\r\nimport HomePage from './components/HomePage'\r\nimport Signup from './components/Signup'\r\nimport Login from './components/Login'\r\nimport PatientProfile from './components/PatientProfile'\r\nimport PatientAppointments from './components/PatientAppointments'\r\nimport PatientMedPlanner from './components/PatientMedPlanner'\r\nimport DoctorProfile from './components/DoctorProfile'\r\nimport DoctorCalendar from './components/DoctorCalendar'\r\nimport AppointmentDetails from './components/AppointmentDetails'\r\nimport Footer from './components/Footer'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport {API_URL} from './config'\r\nimport axios from 'axios'\r\n\r\nimport {Switch, Route, withRouter, Redirect} from 'react-router-dom'\r\nimport CreatePrescription from './components/CreatePrescription';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    loggedInUser: null,\r\n    usertype: null,\r\n    errorMsg:'',\r\n    desiredUrl: null,\r\n    passwordStrength: ''\r\n  }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n    if (!this.state.loggedInUser){\r\n      axios.get(`${API_URL}/user`, {withCredentials: true})\r\n      .then((res) => {\r\n          this.setState({\r\n            loggedInUser: res.data.loggedInUser,\r\n            usertype: res.data.usertype\r\n          })\r\n        })\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n  handleSignUp = (e) => {\r\n    e.preventDefault();\r\n    const {email, password, usertype, username} = e.currentTarget;\r\n\r\n    axios.post(`${API_URL}/auth/signup`, {\r\n      username: username.value,\r\n      email: email.value,\r\n      password: password.value,\r\n      usertype: usertype.value,\r\n      // allergies: allergies.value,\r\n      // history: history.value\r\n      // to check if withCredentials is needed and state change\r\n    })\r\n      .then((res) => \r\n      {this.setState({errorMsg: ''}, ()=> this.props.history.push('/login'))\r\n        \r\n      })\r\n      .catch(err=>{\r\n        this.setState({\r\n          errorMsg: err.response.data.errorMessage\r\n        })\r\n      }) \r\n  }\r\n\r\n  \r\n  handleLogIn = (e) => {\r\n    e.preventDefault(); \r\n    const {email, password, usertype} = e.currentTarget;\r\n    axios.post(`${API_URL}/auth/login`, {\r\n      email: email.value, \r\n      password: password.value,\r\n      usertype: usertype.value\r\n    },  {withCredentials: true})\r\n      .then((res) => {\r\n        this.setState({\r\n          loggedInUser: res.data,\r\n          usertype: usertype.value,\r\n          errorMsg: null\r\n        }, () => {       \r\n          if (this.state.usertype === \"patient\"){\r\n            if (window.location.pathname.includes('doctor')){\r\n              this.props.history.push(window.location.pathname)\r\n            } \r\n            else if (!window.location.pathname.includes('doctor')) (this.props.history.push('/profile'))\r\n          } \r\n          else if (this.state.usertype === \"doctor\"){\r\n            this.props.history.push(`/doctor/${this.state.loggedInUser._id}`)\r\n          }\r\n        })\r\n      })\r\n      .catch(err=>{\r\n        this.setState({\r\n          errorMsg: err.response.data.error\r\n        })\r\n      }) \r\n  }\r\n\r\n\r\n\r\n  handleLogOut = (e) => {\r\n    //{withCredentials: true} is not false ???\r\n    axios.post(`${API_URL}/auth/logout`, {}, {withCredentials: true})\r\n      .then(() => {\r\n        this.setState({\r\n          loggedInUser: null,\r\n          usertype: null,\r\n          desiredUrl: null\r\n        }, ()=>{\r\n          this.props.history.push('/')\r\n        })\r\n      })    \r\n  }\r\n\r\n  handlePass=(e)=>{\r\n    let strength = 0\r\n    let lowerCase = new RegExp (/^(?=.*[a-z])/)\r\n    let upperCase = new RegExp (/(?=.*[A-Z])/)\r\n    let number = new RegExp (/(?=.*[0-9])/)\r\n    let especial = new RegExp (/(?=.*[!@#$%^&*])/)  \r\n    let amount = new RegExp (/(?=.{8,})/)\r\n    \r\n    let password= e.currentTarget.value\r\n    if (lowerCase.test(password)) {strength++}\r\n    if (upperCase.test(password)) {strength++}\r\n    if (number.test(password)) {strength++}\r\n    if (especial.test(password)) {strength++}\r\n    if (amount.test(password)) {strength++}\r\n    \r\n    if (strength===0) this.setState({passwordStrength: ''})\r\n    if (strength<3 && strength>0) this.setState({passwordStrength: 'Your password is too weak.'})\r\n    if (strength<5 && strength>=3) this.setState({passwordStrength: 'Almost there, you just need to increase your password strength a little more.'})\r\n    if (strength>=5) this.setState({passwordStrength: 'Your password is good to go!'})\r\n\r\n    if (e.currentTarget.value==='') this.setState({errorMsg: ''})\r\n  }\r\n\r\n  clearError=(e)=>{\r\n    if (e.currentTarget.value==='') this.setState({errorMsg: ''})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"body\">\r\n\r\n                \r\n        {/* add condition to render only if logged in */}\r\n        <NavBar loggedInUser= {this.state.loggedInUser} usertype= {this.state.usertype} onLogout={this.handleLogOut}/>     \r\n\r\n        <Switch>\r\n\r\n          {/* Public routes */}\r\n          <Route exact path=\"/\" render={() => <HomePage  doctorList1={this.state.doctorList}/>}/>      \r\n\r\n\r\n          {/* Routes for logged out users */}\r\n          {(!this.state.loggedInUser) ?\r\n            <>\r\n              <Route path=\"/login\" render={() => <Login errorMsg={this.state.errorMsg} onClear={this.clearError} onLogIn={this.handleLogIn}/>}/> \r\n              <Route path=\"/signup\" render={() => <Signup onPass={this.handlePass} passwordStrength={this.state.passwordStrength} onClear={this.clearError} errorMsg={this.state.errorMsg} onSignUp={this.handleSignUp}/>}/>\r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <Login onClear={this.clearError} errorMsg={this.state.errorMsg} onLogIn={this.handleLogIn}/>}/>\r\n            </>\r\n            : null}\r\n          \r\n\r\n          {/* Routes for doctors */}\r\n          {(this.state.usertype==='doctor')?\r\n            <>\r\n              <Route exact path=\"/calendar\" render={(routeProps) => {\r\n                return <DoctorCalendar loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              <Route path=\"/calendar/:appointmentId\" render={(routeProps) => {\r\n                return <AppointmentDetails loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <DoctorProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }/>\r\n              <Route path=\"/create-prescription/:appointmentId\" render={routeProps=> <CreatePrescription loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }/>\r\n            </>\r\n            :null}\r\n\r\n \r\n          {/* Routes for patients */}\r\n          {(this.state.usertype==='patient')?\r\n            <>\r\n              <Route path=\"/profile\" render={(routeProps) => {\r\n                return <PatientProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n\r\n              <Route path=\"/appointments\" render={(routeProps) => {\r\n                return <PatientAppointments loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n\r\n              <Route path=\"/medication-planner\" render={(routeProps) => {\r\n                return <PatientMedPlanner loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              \r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <DoctorProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n            }/>\r\n            </>\r\n            : null }\r\n        \r\n           \r\n        </Switch>\r\n\r\n        <Footer />\r\n\r\n      \r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}