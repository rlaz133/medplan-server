{"version":3,"sources":["components/NavBar.js","components/HomeSeachResult.js","components/MapContainer.js","config.js","components/HomePage.js","components/Signup.js","components/Login.js","components/PatientProfile.js","components/PatientAppointments.js","components/PatientMedPlanner.js","components/event-utils.js","components/DoctorProfile.js","components/DoctorCalendar.js","components/AppointmentDetails.js","components/Footer.js","components/PrescriptionItem.js","components/PrescriptionForm.js","components/CreatePrescription.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","src","alt","this","props","usertype","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","variant","Item","Link","href","onClick","onLogout","loggedInUser","_id","Component","HomeSeachResult","doctorList","map","doctor","picture","username","speciality","city","openingTime","closingTime","async","defer","type","MapContainer","state","mapPlaces","lat","lng","google","zoom","style","width","height","initialCenter","position","API_URL","GoogleApiWrapper","process","HomePage","doctors","filteredDoctors","specialityQuery","cityQuery","handleChange","e","docSearch","currentTarget","name","docSearchValue","value","setState","handleSearch","console","log","searchResult","filter","toLowerCase","includes","axios","get","then","res","data","onChange","placeholder","Signup","passwordStrength","displayError","onSubmit","onSignUp","htmlfor","onClear","onPass","errorMsg","Login","onLogIn","for","PatientProfile","patient","updatedField","editing","unedited","handleEnable","buttons","getElementsByTagName","readOnly","classList","toggle","field","handleDisable","handleEdit","d","keyName","Object","keys","values","patch","withCredentials","birthDate","weight","allergies","history","phoneNumber","address","email","autocomplete","document","getElementById","PatientAppointments","appointments","report","handleDownload","appointmentId","preventDefault","window","open","ordered","JSON","parse","stringify","sort","a","b","moment","time","appointment","timeToApp","dateApp","local","format","timeApp","Date","now","toNow","fromNow","reason","disabled","PatientMedPlanner","currentday","Axios","filteredmeds","prescriptions","prescription","medications","flat","medication","isBefore","endDate","startDate","diff","daysPerTake","currentmeds","subtract","toString","add","previousDay","nextDay","med","takesPerDay","dosePerTake","comments","eventGuid","createEventId","String","DoctorProfile","weekendsVisible","currentEvents","events","match","params","doctorId","handleImgEnable","handleImgEdit","uppicture","image","files","uploadData","FormData","append","post","handleDateSelect","selectInfo","startStr","view","calendar","unselect","alert","calendarApi","end","start","title","prompt","addEvent","endStr","startEditable","editable","handleEventClick","clickInfo","event","extendedProps","isAfter","confirm","remove","handleEvents","appoCreate","eventId","appoEdit","appoCancel","delete","eventColor","proper","patient_id","color","phone","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","momentPlugin","headerToolbar","left","center","right","initialView","titleFormat","dayHeaderFormat","selectable","selectMirror","dayMaxEvents","allDaySlot","eventStartEditable","slotMinTime","slotMaxTime","businessHours","daysOfWeek","startTime","endTime","eventConstraint","weekends","select","eventContent","renderEventContent","eventClick","eventsSet","eventAdd","eventChange","eventRemove","defaultTimedEventDuration","eventInfo","timeText","DoctorCalendar","push","eventDurationEditable","AppointmentDetails","cancelAppointment","toggleLoader","loadReport","location","reload","Footer","PrescriptionItem","onDelete","PrescriptionForm","onCommit","min","toLocaleString","rows","cols","CreatePrescription","handleSubmit","newMedication","clonePrescription","inputs","handleDelete","newPrescription","index","handleCreate","catch","err","key","App","desiredUrl","handleSignUp","password","response","errorMessage","handleLogIn","pathname","error","handleLogOut","handlePass","strength","lowerCase","RegExp","upperCase","number","especial","amount","test","clearError","exact","path","render","doctorList1","routeProps","React","withRouter","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f1be862f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Nav, Navbar} from 'react-bootstrap'\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n\r\n            <div className=\"navbar-all\">\r\n\r\n                <div className=\"navbar-logo\">\r\n                    <Link to=\"/\"><img src=\"../images/logo-transparent.png\" alt=\"logo\" className=\"header-logo\"/></Link>\r\n                </div>\r\n\r\n\r\n                <div className=\"navbar-menu\">\r\n\r\n                    {(this.props.usertype === \"patient\") ? (\r\n                        <>\r\n                            <Navbar expand=\"lg\">\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav variant=\"tabs\" className=\"mr-auto\">\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/\"><Nav.Link className=\"nav-link\" href='/'>Search doctor</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/profile\" ><Nav.Link className=\"nav-link\" href='/profile'>Profile</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/appointments\"><Nav.Link className=\"nav-link\" href='/appointments'>Appointments</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/medication-planner\"><Nav.Link className=\"nav-link\" href='/medication-planner'>Planner</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                <Nav.Link  onClick={this.props.onLogout}>Log Out</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {(this.props.usertype === \"doctor\") ? (            \r\n                        <>\r\n                            <Navbar expand=\"lg\">\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav variant=\"tabs\" className=\"mr-auto\">\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/calendar\"><Nav.Link className=\"nav-link\" href='/calendar'>Calendar</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to={`/doctor/${this.props.loggedInUser._id}`}><Nav.Link className=\"nav-link\" href={`/doctor/${this.props.loggedInUser._id}`}>Profile</Nav.Link></Link>\r\n                                </Nav.Item>     \r\n                                <Nav.Item className=\"nav-item\">\r\n                                <Nav.Link  onClick={this.props.onLogout}>LOG OUT</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {(!this.props.loggedInUser) ? (\r\n                        <>\r\n                            <Navbar expand=\"lg\">\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav variant=\"tabs\" className=\"mr-auto\">\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to=\"/signup\"><Nav.Link className=\"nav-link\" href='/signup'>SIGN UP</Nav.Link></Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"nav-item\">\r\n                                    <Link to='/login'><Nav.Link className=\"nav-link\" href='/login'>LOG IN</Nav.Link></Link>\r\n                                </Nav.Item>     \r\n                            </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                        </>\r\n                    ) : null}\r\n                       \r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class HomeSeachResult extends Component {\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"main-content\">\r\n\r\n                {\r\n                    this.props.doctorList.map((doctor) => {\r\n                        return  (\r\n                            <div className=\"home-doctor-card\">\r\n\r\n                                <img className=\"doc-img\" src={doctor.picture} alt=\"profile picture\"/>\r\n                                <div className=\"search-doc-details-text\">\r\n                                    <p><strong>{doctor.username}</strong></p>\r\n                                    <p>{doctor.speciality}</p>\r\n                                    <p><em>{doctor.city}</em></p>\r\n                                    <p>From {doctor.openingTime} to {doctor.closingTime}</p>\r\n                                </div>                                \r\n\r\n                                <Link to={`/doctor/${doctor._id}`}>\r\n                                <button className=\"button\">Book an appointment</button>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                              \r\n                    })\r\n                }\r\n\r\n                <script async defer src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap\" type=\"text/javascript\"></script>\r\n                \r\n            </div>\r\n\r\n                \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport googleMapStyle from \"../googleMapStyle\";\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\n\r\n\r\nexport class MapContainer extends Component {\r\n\r\n\r\n  state = {\r\n    mapPlaces: [\r\n      { lat: 52.370292, lng: 4.897403},\r\n      { lat: 52.370282, lng: 4.897503}\r\n    ]\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const mapStyles = {\r\n      width: '350px',\r\n      height: '200px'\r\n    };\r\n\r\n    return (\r\n    <>\r\n\r\n\r\n      <div className=\"map-card\">\r\n\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={10}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 52.372471, lng: 4.890983}}\r\n        >\r\n\r\n          <Marker position={{lat: 52.370292, lng: 4.897403},{lat: 52.361236, lng: 4.880148}} />\r\n\r\n        </Map>\r\n        \r\n      </div>\r\n\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\n// Map.defaultProps = googleMapStyle;\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n})(MapContainer);\r\n\r\n\r\n","\r\n\r\n//to be modified if needed, check w/ Rafa\r\n// process.env.REACT_APP_API_URL ||\r\n\r\nexport const API_URL =   process.env.REACT_APP_API_URL","import React, { Component } from 'react'\r\nimport HomeSeachResult from './HomeSeachResult'\r\n\r\n\r\nimport MapContainer from './MapContainer'\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport {API_URL} from '../config'\r\nimport axios from 'axios'\r\n\r\nexport default class HomePage extends Component {\r\n\r\n    state = {\r\n        doctors: [],\r\n        filteredDoctors: [],\r\n        specialityQuery: \"\",\r\n        cityQuery: \"\"\r\n        \r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        axios.get(`${API_URL}/doctor/search`)\r\n            .then((res) => {\r\n            this.setState({\r\n                doctors: res.data,\r\n                filteredDoctors: res.data\r\n            })\r\n        })\r\n    } \r\n    \r\n\r\n    handleChange = (e) => {\r\n        let docSearch = e.currentTarget.name\r\n        let docSearchValue = e.currentTarget.value\r\n        \r\n\r\n\r\n        if (docSearch === \"city\"){\r\n            this.setState({\r\n                cityQuery:  docSearchValue\r\n            }, ()=>this.handleSearch())\r\n        } else {\r\n            this.setState({\r\n                specialityQuery: docSearchValue\r\n            }, ()=>this.handleSearch())\r\n        }\r\n    }\r\n      \r\n\r\n\r\n    handleSearch = (e) => {\r\n\r\n        console.log(\"state in handle search\", this.state.cityQuery)\r\n        console.log(\"state in handle search\", this.state.specialityQuery)\r\n\r\n        let searchResult = this.state.doctors.filter(doctor => {\r\n            if (!doctor.speciality || !doctor.city){\r\n                return false\r\n            } \r\n            console.log(\"inside the map\", doctor.speciality)\r\n            return doctor.speciality.toLowerCase().includes(this.state.specialityQuery.toLowerCase()) \r\n            &&  doctor.city.toLowerCase().includes(this.state.cityQuery.toLowerCase()) \r\n\r\n        })\r\n\r\n        this.setState({\r\n            filteredDoctors: searchResult\r\n        })\r\n\r\n    }\r\n        \r\n\r\n\r\n    render() {\r\n        return (\r\n            <>                               \r\n\r\n                <div className=\"index-info-card\">\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/doctors.png\" alt=\"img\"/> \r\n                        <p>Thousands of doctors available on the platform.</p>\r\n                    </div>\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/online-booking.png\" alt=\"img\"/>\r\n                        <p>Easy online booking without struggle and 24/7!</p>\r\n                    </div>\r\n\r\n                    <div className=\"index-img-card\">\r\n                        <img src=\"/images/prescription.png\" alt=\"img\"/>\r\n                        <p>Direct access to your prescriptions.</p>\r\n                    </div> \r\n                    \r\n                </div>  \r\n\r\n                <div className=\"home-search-bar\">\r\n                    <input className=\"input-search\" onChange={this.handleChange} name=\"speciality\" type=\"text\" placeholder=\"Search by speciality\"></input>\r\n                    <input className=\"input-search\" onChange={this.handleChange} name=\"city\" type=\"text\" placeholder=\"Search by city\"></input>\r\n                </div>\r\n\r\n             \r\n                {/* <MapContainer /> */}\r\n\r\n                <HomeSeachResult doctorList={this.state.filteredDoctors} />\r\n\r\n               \r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default class Signup extends Component {\r\n    state={\r\n        passwordStrength: '',\r\n        displayError: true\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Sign Up</h1>\r\n\r\n                <form onSubmit={this.props.onSignUp} className=\"main-content sign-log-form\">\r\n\r\n\r\n                    <div className=\"user-type-choice\">\r\n                        <label className=\"label-user\" htmlfor=\"usertype\">I am a </label> \r\n                        <select className=\"button\" name=\"usertype\">\r\n                            <option className=\"user-type-choice\" value=\"patient\">Patient</option> \r\n                            <option className=\"user-type-choice\" value=\"doctor\">Doctor</option>                            \r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <label className=\"login-label\">Full name</label>\r\n                    <input onChange={this.props.onClear} name=\"username\" type=\"text\"></input>\r\n\r\n                    <label className=\"login-label\">Email</label>\r\n                    <input onChange={this.props.onClear} name=\"email\" type=\"email\"></input>\r\n\r\n                    <label className=\"login-label\">Password</label>\r\n                    <em><small>Password needs to be at least 8 characters, and include both lower and upper cases, numbers and special signs.</small></em>\r\n                    <input onChange={this.props.onPass} name=\"password\" type=\"password\"></input>\r\n                    <small>{this.props.passwordStrength}</small>\r\n\r\n\r\n                    <div className=\"sign-log-btn-line\">\r\n                        <button className=\"button\" type=\"submit\">Submit</button>\r\n                        <Link to=\"/login\"><button className=\"button\">Or Log In!</button></Link>\r\n                    </div>                    \r\n\r\n                </form>\r\n\r\n\r\n                <p>{this.props.errorMsg}</p>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n    \r\n\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n\r\n            <>\r\n\r\n                <h1>Log In</h1>\r\n\r\n                <form onSubmit={this.props.onLogIn} className=\"main-content sign-log-form\">\r\n\r\n\r\n                    <div className=\"user-type-choice\">\r\n                        <label className=\"label-user\" for=\"usertype\">I am a </label>\r\n                        <select className=\"button\" name=\"usertype\">\r\n                            <option className=\"user-type-choice\" value=\"patient\">Patient</option>\r\n                            <option className=\"user-type-choice\" value=\"doctor\">Doctor</option>\r\n                            \r\n                        </select>\r\n                    </div>\r\n\r\n                    <label className=\"login-label\">Email</label>\r\n                    <input onChange={this.props.onClear} name=\"email\" type=\"email\"></input>\r\n\r\n                    <label className=\"login-label\">Password</label>\r\n                    <input onChange={this.props.onClear} name=\"password\" type=\"password\"></input>\r\n\r\n                    <div className=\"sign-log-btn-line\">\r\n                        <button className=\"button\" type=\"submit\">Submit</button>\r\n                        <Link to=\"/signup\"><button className=\"button\">Or Sign Up!</button></Link>\r\n                    </div>\r\n\r\n                    \r\n\r\n                </form>\r\n\r\n                <p>{this.props.errorMsg}</p>\r\n\r\n                \r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Login from \"./Login\"\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\n\r\nexport default class PatientProfile extends Component {\r\n\r\n  state={\r\n    patient: {},\r\n    updatedField: {},\r\n    editing: false,\r\n    unedited: '',\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/planner`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({\r\n          patient: res.data\r\n        })\r\n      })    \r\n  }\r\n  \r\n\r\n//Edit Profile methods\r\n\r\n  handleChange = (e) => {\r\n    const {name, value}= e.currentTarget\r\n    this.setState({\r\n        updatedField: {[name]: value}, \r\n        patient: {...this.state.patient, [name]:value}\r\n    })\r\n  }\r\n\r\n  handleEnable = (e)=>{\r\n    if (!this.state.editing){\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = false\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].value\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, unedited: field})\r\n    }\r\n  }\r\n  \r\n  handleDisable = (e)=>{\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = true\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].name\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, patient:  {...this.state.patient, [field]: this.state.unedited, updatedField:{}}})\r\n  }\r\n\r\n  handleEdit = (e, d) => {\r\n    let keyName= Object.keys(e)[0]\r\n    let value = Object.values(e)[0]\r\n    axios.patch(`${API_URL}/patient/${this.props.loggedInUser._id}`, {[keyName]: value}, {withCredentials:true})\r\n    // this.setState({\r\n\r\n\r\n    // })\r\n    let buttons = d.getElementsByTagName('BUTTON')\r\n    d.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing})\r\n    console.log(this.state.patient)\r\n  }\r\n\r\n\r\n \r\n  render() {\r\n    if (!this.props.loggedInUser){\r\n      return <Login />\r\n    }\r\n\r\n    if (!this.state.patient){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n    }\r\n\r\n\r\n    const {username, birthDate, height, weight, allergies, history, phoneNumber, address, email} = this.state.patient\r\n    console.log (birthDate)\r\n\r\n    return (\r\n      <>\r\n        <h1>Profile</h1>\r\n\r\n\r\n        <div className=\"main-content profile-page-content\">\r\n\r\n          <div className=\"profile-field\" id='name-profile'>\r\n            <label className=\"profile-label\"><strong>Full Name</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"username\" type=\"text\" value={username}  onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n            <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='birthDate-profile'>\r\n            <label className=\"profile-label\"><strong>Birth Date</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"birthDate\" type=\"text\" value={birthDate}  onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('birthDate-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n    \r\n          <div className=\"profile-field\" id='address-profile'>\r\n            <label className=\"profile-label\"><strong>Address</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"address\" type=\"text\" value={address} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='email-profile'>\r\n            <label className=\"profile-label\"><strong>E-Mail</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"email\"  type=\"email\" value={email} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>  \r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='phoneNumber-profile'>\r\n            <label className=\"profile-label\"><strong>Telephone</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"phoneNumber\" type=\"text\" value={phoneNumber} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('phoneNumber-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='height-profile'>\r\n            <label className=\"profile-label\"><strong>Height (cm)</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"height\" type=\"text\" value={height} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('height-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='weight-profile'>\r\n            <label className=\"profile-label\"><strong>Weight (kg)</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"weight\" type=\"text\" value={weight} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('weight-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='allergies-profile'>\r\n            <label className=\"profile-label\"><strong>Allergies</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"allergies\" type=\"text\" value={allergies} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n            <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('allergies-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='history-profile'>\r\n            <label className=\"profile-label\"><strong>Medical History</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"history\" type=\"text\" value={history} onChange={this.handleChange}></input>\r\n            <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n          <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n            <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('history-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        \r\n\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n  \r\n\r\n  ","import React, { Component } from 'react';\r\nimport {API_URL} from '../config';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport default class PatientAppointments extends Component {\r\n\r\n\r\n    state = {\r\n        loggedInUser: this.props.loggedInUser,\r\n        usertype: this.props.usertype,\r\n        appointments: null,\r\n        report: null,\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount(){\r\n        axios.get(`${API_URL}/patient/appointments` , {withCredentials: true})\r\n        .then((res) => {\r\n            let ordered = JSON.parse(JSON.stringify(res.data))\r\n            ordered.sort((a, b)=> moment(b.time) - moment(a.time)) \r\n            console.log (ordered)\r\n            this.setState({\r\n            appointments: ordered           \r\n            }, ()=> console.log(this.state.appointments))\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    \r\n    handleDownload = (e, appointmentId) => {\r\n        e.preventDefault();\r\n        axios.get(`${API_URL}/patient/appointment/report/${appointmentId}`, {withCredentials: true})\r\n        .then((res) => {\r\n            console.log(res.data.report)\r\n            this.setState({\r\n                report: res.data.report,\r\n            })\r\n            window.open(this.state.report, '_blank')\r\n\r\n        })    \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        if (!this.state.appointments){\r\n            return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <h1>Appointments</h1>\r\n\r\n                {\r\n                    this.state.appointments.map(appointment => {\r\n\r\n                        let dateApp = moment(appointment.time).local().format('Do MMM YYYY')\r\n                        let timeApp =  moment(appointment.time).local().format('HH:mm')\r\n                        let timeToApp\r\n                        (appointment.time > Date.now()) ? timeToApp=moment(appointment.time).local().toNow(): timeToApp=moment(appointment.time).local().fromNow()\r\n\r\n                        return (\r\n                            <div className=\"main-content\">  \r\n\r\n                                <div className=\"appointment-card\">\r\n                                    <div>\r\n                                        <p><strong>On: {dateApp} at {timeApp}, {timeToApp}</strong></p>\r\n\r\n                                        <p>With <strong>Dr. {appointment.doctor.username}</strong></p>\r\n                                        <p><strong>Specialized in: </strong>{appointment.doctor.speciality}</p>\r\n                                        <p><strong>Purpose: </strong>{appointment.reason}</p>\r\n                                        <p><strong>Located at: </strong>{appointment.doctor.address}</p>\r\n                                    </div>\r\n\r\n                                             \r\n                                        {(appointment.time > Date.now()) ? (\r\n                                        <Link to={`/doctor/${appointment.doctor._id}`}><button className=\"button\">Cancel</button></Link>\r\n\r\n                                            ) : (appointment.report? \r\n                                            \r\n                                                <button className=\"button\" onClick={(e) => this.handleDownload(e, appointment._id)}>See Report</button>:\r\n                                                <button className=\"button disabled\" disabled>No Report</button>\r\n\r\n                                                )}\r\n                                     \r\n                                </div>\r\n                            </div>\r\n                        )                      \r\n                    })\r\n\r\n                }    \r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport {API_URL} from '../config'\r\n// import { DayCellContent } from '@fullcalendar/react'\r\nimport moment from 'moment'\r\n\r\nexport default class PatientMedPlanner extends Component {\r\n\r\n    state={\r\n        patient:{},\r\n        currentday: moment(Date.now()) \r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(`${API_URL}/planner`, {withCredentials:true})\r\n            .then((res)=>{\r\n                this.setState({patient: res.data}, ()=>{\r\n                    console.log(this.state.patient)\r\n                    let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n                    let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n                    this.setState({currentmeds: filteredmeds}, ()=>console.log(this.state))\r\n                })\r\n            })\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState){\r\n\r\n    // }\r\n    \r\n\r\n    previousDay(){\r\n        this.setState({currentday: this.state.currentday.subtract(1, 'day')}, console.log (this.state.currentday.toString()))\r\n        let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n        let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n        this.setState({currentmeds: filteredmeds}, ()=>console.log(this.state))\r\n    }\r\n\r\n    nextDay(){\r\n        this.setState({currentday: this.state.currentday.add(1, 'day')}, console.log (this.state.currentday.toString()))\r\n        let arraymeds = this.state.patient.prescriptions.map(prescription=> prescription.medications).flat()\r\n        let filteredmeds= arraymeds.filter(medication=> moment(this.state.currentday).isBefore(medication.endDate) && moment(medication.startDate).isBefore(this.state.currentday) && (this.state.currentday.diff(moment(medication.startDate), 'days'))%medication.daysPerTake===0)\r\n        this.setState({currentmeds: filteredmeds}, ()=>console.log(this.state))\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.currentmeds){\r\n            return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n          }\r\n\r\n        return (\r\n            <>\r\n                <h4>Medication Planner</h4>\r\n\r\n                <div className=\"patient-cal-date-field\">\r\n                    <button className=\"button calendar-day\" onClick={()=>this.previousDay()}>&lt;</button>\r\n                    <h4>{this.state.currentday.format(\"Do MMM, YYYY\").toString()}</h4>\r\n                    <button className=\"button calendar-day\" onClick={()=>this.nextDay()}>&gt;</button>\r\n                </div>\r\n\r\n                <div className=\"main-content patient-cal-day-times\">\r\n\r\n                    <h4 className=\"time-planner\">Morning</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===2){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                    <hr/>\r\n\r\n                    <h4 className=\"time-planner\">Noon</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===1){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                    <hr/>\r\n\r\n                    <h4 className=\"time-planner\">Night</h4>\r\n                    {this.state.currentmeds.map(med=> {if (med.takesPerDay===3 ||med.takesPerDay===2){return <div><p>{med.name} -  {med.dosePerTake} - Note: {med.comments}</p></div>}})}\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n","let eventGuid = 0\r\n\r\nexport function createEventId() {\r\n  return String(eventGuid++)\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport { createEventId } from './event-utils'\r\nimport moment from 'moment'\r\nimport momentPlugin from '@fullcalendar/moment'\r\n\r\n\r\nexport default class DoctorProfile extends Component {\r\n\r\n  state={\r\n    doctor: {},\r\n    weekendsVisible: false,\r\n    currentEvents: [],\r\n    updatedField: {},\r\n    editing: false,\r\n    unedited: '',\r\n    appointments: [],\r\n    events:[]\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({doctor: res.data}, ()=>{console.log(this.state.doctor, new Date(this.state.doctor.openingTime))})\r\n      })\r\n      axios.get(`${API_URL}/doctor/appointments/${this.props.match.params.doctorId}`, {withCredentials: true})\r\n      .then((res)=>{\r\n        this.setState({appointments: res.data, events: res.data.map(appointment=>{\r\n          console.log ('ids:', appointment.patient, this.props.loggedInUser._id)\r\n          let eventColor= appointment.patient._id===this.props.loggedInUser._id? '#51B8F9': 'gray'\r\n          let proper = appointment.patient_id===this.props.loggedInUser._id? true : false\r\n          return {title: appointment.reason, start:appointment.time, id:appointment.eventId, startEditable: proper, patient: appointment.patient, color: eventColor}})},\r\n         ()=>{console.log(this.state)}\r\n         ) \r\n      })\r\n      \r\n  }\r\n  \r\n\r\n//Edit Profile methods\r\n\r\n  handleChange = (e) => {\r\n    const {name, value}= e.currentTarget\r\n    this.setState({\r\n        updatedField: {[name]: value}, \r\n        doctor:{...this.state.doctor, [name]:value}\r\n    })\r\n  }\r\n\r\n  handleEnable = (e)=>{\r\n    if (!this.state.editing){\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = false\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].value\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, unedited: field})\r\n    }\r\n  }\r\n  \r\n  handleDisable = (e)=>{\r\n    let buttons = e.getElementsByTagName('BUTTON')\r\n    e.getElementsByTagName('INPUT')[0].readOnly = true\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    let field= e.getElementsByTagName('INPUT')[0].name\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing, doctor: {...this.state.doctor, [field]: this.state.unedited, updatedField:{}}})\r\n  }\r\n\r\n  handleEdit = (e, d) => {\r\n    let keyName= Object.keys(e)[0]\r\n    let value = Object.values(e)[0]\r\n    axios.patch(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {[keyName]: value}, {withCredentials:true})\r\n    let buttons = d.getElementsByTagName('BUTTON')\r\n    d.getElementsByTagName('INPUT')[0].classList.toggle('readonly-field')\r\n    for (let button of buttons){button.classList.toggle('hidden-button')}\r\n    this.setState({editing: !this.state.editing})\r\n  }\r\n\r\n  handleImgEnable= (e)=>{\r\n      e.getElementsByTagName('INPUT')[0].classList.toggle('hidden-button')\r\n      e.getElementsByTagName('BUTTON')[1].classList.toggle('hidden-button')\r\n      this.setState({editing: !this.state.editing})\r\n  }\r\n\r\n  handleImgEdit =(e)=>{\r\n    if (e){\r\n    let image = e.getElementsByTagName('INPUT')[0].files[0]\r\n    let uploadData = new FormData()\r\n    uploadData.append('imageUrl', image)\r\n    let uppicture\r\n    e.getElementsByTagName('INPUT')[0].classList.toggle('hidden-button')\r\n    e.getElementsByTagName('BUTTON')[1].classList.toggle('hidden-button')\r\n    axios.post(`${API_URL}/upload`, uploadData)\r\n    .then((res)=> {uppicture= res.data.image; axios.patch(`${API_URL}/doctor/${this.props.match.params.doctorId}`, {picture: res.data.image}, {withCredentials:true})})\r\n    .then((res)=>{console.log (res);this.setState({doctor:{...this.state.doctor, picture: uppicture}})})\r\n    \r\n  }}\r\n\r\n  //Calendar methods \r\n  handleDateSelect = (selectInfo) => {\r\n    if (!moment(new Date(selectInfo.startStr)).isBefore(Date.now())) {\r\n      let calendarApi = selectInfo.view.calendar\r\n      calendarApi.unselect()\r\n      \r\n      if (selectInfo.end-selectInfo.start>1800000) {\r\n        alert('Appointments must have a duration of half an hour')\r\n        return\r\n      }\r\n\r\n    let title = prompt('Please enter the reason for the appointment: ')\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        patient: this.props.loggedInUser._id,\r\n        startEditable: true,\r\n        editable: false\r\n      })\r\n    }}\r\n    else{\r\n      selectInfo.view.calendar.unselect()\r\n      alert('Please, select a valid date')\r\n    }\r\n  }\r\n  \r\n  handleEventClick = (clickInfo) => {\r\n    console.log (clickInfo.event.startStr)\r\n    if ((clickInfo.event.extendedProps.patient._id === this.props.loggedInUser._id || clickInfo.event.extendedProps.patient === this.props.loggedInUser._id)\r\n      && moment(clickInfo.event.startStr).isAfter(moment(Date.now()))\r\n      ){\r\n      if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`))   {clickInfo.event.remove()}\r\n     \r\n  }}\r\n  \r\n  handleEvents = (events) => {\r\n    this.setState({\r\n      currentEvents: events\r\n    })\r\n  }\r\n\r\n  //Linking of calendar with database\r\n  appoCreate= (event) =>{\r\n    console.log (event.event)\r\n    axios.post(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}`, \r\n      {time: event.event.start, eventId: event.event.id, reason: event.event.title}, {withCredentials:true})\r\n  }\r\n\r\n  appoEdit= (event) =>{\r\n    axios.patch(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}`, \r\n      {time: event.event.start, eventId: event.event.id, reason: event.event.title}, {withCredentials:true})\r\n  }\r\n\r\n  appoCancel= (event) =>{\r\n    console.log (event.event)\r\n    axios.delete(`${API_URL}/patient/appointments/${this.props.match.params.doctorId}/${event.event.id}`, {withCredentials:true})\r\n  }\r\n  \r\n  render() {\r\n\r\n    \r\n\r\n    if (!this.state.doctor){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n    }\r\n    \r\n    const {username, speciality, city, address, email, phone, openingTime, closingTime, picture} = this.state.doctor\r\n \r\n    return (\r\n      //Profile\r\n      <>\r\n\r\n        <h1>Doctor Profile</h1>\r\n\r\n        <div className=\"main-content profile-page-content\">\r\n\r\n          <div className=\"profile-field profile-field-img\" id='image-profile'>\r\n              <img src={picture} alt='' className=\"doc-img\"/>\r\n              {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n                <>\r\n                  <button className=\"edit-profile\" onClick={()=>this.handleImgEnable(document.getElementById('image-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                  <input  autocomplete=\"off\" type=\"file\" className=\"form-control hidden-button\" name=\"image\" id=\"image\" />\r\n                <button type='submit' className='hidden-button edit-profile' onClick={()=>this.handleImgEdit(document.getElementById('image-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n                </>\r\n              :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='name-profile'>\r\n            <label className=\"profile-label\"><strong>Name</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"username\" type=\"text\" value={username}  onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('name-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='speciality-profile'>\r\n            <label className=\"profile-label\"><strong>Speciality</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"speciality\" type=\"text\" value={speciality}  onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('speciality-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='city-profile'>\r\n            <label className=\"profile-label\"><strong>City</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"city\" type=\"text\" value={city} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('city-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n          :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='address-profile'>\r\n            <label className=\"profile-label\"><strong>Address</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"address\" type=\"text\" value={address} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('address-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='email-profile'>\r\n            <label className=\"profile-label\"><strong>E-Mail</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"email\"  type=\"email\" value={email} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('email-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>  \r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n          <div className=\"profile-field\" id='phone-profile'>\r\n            <label className=\"profile-label\"><strong>Telephone</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"phone\" type=\"text\" value={phone} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('phone-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}        \r\n          </div>\r\n          \r\n          <div className=\"profile-field\" id='opening-profile'>\r\n            <label className=\"profile-label\"><strong>Opening time</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"openingTime\" type=\"text\" value={openingTime} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('opening-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n          \r\n          <div className=\"profile-field\" id='closing-profile'>\r\n            <label className=\"profile-label\"><strong>Closing time</strong></label>\r\n            <input autocomplete=\"off\" className='readonly-field' readOnly={true} name=\"closingTime\" type=\"text\" value={closingTime} onChange={this.handleChange}></input>\r\n            {(this.props.loggedInUser._id=== this.props.match.params.doctorId)?\r\n              <>\r\n                <button className=\"edit-profile\" onClick={()=>this.handleEnable(document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-edit.png\" alt=\"tbt\"/></button>\r\n                <button className='hidden-button edit-profile' onClick={()=>this.handleDisable(document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-delete.png\" alt=\"tbt\"/></button>\r\n              <button type='submit' className='hidden-button edit-profile' onClick={() => this.handleEdit(this.state.updatedField, document.getElementById('closing-profile'))}><img className=\"img-edit-btn-profile\" src=\"/images/btn-valid.png\" alt=\"tbt\"/></button>\r\n              </>\r\n            :null}\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"booking-card\">\r\n\r\n            {(this.props.usertype==='patient') ? (\r\n              <>\r\n\r\n                <div className=\"booking-instr-card\">\r\n\r\n                  <h4>Booking Instructions</h4>\r\n                  \r\n                  <ul className=\"booking-instructions-text\">\r\n                    <li>Select the time slot by clicking on it</li>\r\n                    <li>A pop-up appears, enter the purpose of the appointment</li>\r\n                    <li>Click \"ok\" to valid the booking</li>\r\n                    <li>You can:</li>\r\n                    <ul>\r\n                      <li>Modify the appointment time and date by dragging it to another available slot</li> \r\n                      <li>Cancel the appointment, by clicking on it a pop will appear to confirm the cancellation</li>\r\n                    </ul>                \r\n                  </ul>\r\n\r\n                </div>\r\n                \r\n\r\n\r\n                <div className=\"calendar-card\">\r\n\r\n\r\n                  <FullCalendar\r\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, momentPlugin]}\r\n                    headerToolbar={{\r\n                      left: 'prev',\r\n                      center: 'title',\r\n                      right: 'next'\r\n                    }}\r\n                    initialView='timeGridWeek'\r\n                    titleFormat = 'Do MMM YYYY'\r\n                    dayHeaderFormat = 'DD/MM'\r\n                    selectable={true}\r\n                    selectMirror={false}\r\n                    dayMaxEvents={true}\r\n                    allDaySlot= {false}\r\n                    eventStartEditable={true}\r\n                    slotMinTime= '08:00'\r\n                    slotMaxTime= '20:00'\r\n                    businessHours = {{\r\n                      daysOfWeek: [ 1, 2, 3, 4, 5 ], \r\n                      startTime: this.state.doctor.openingTime, \r\n                      endTime: this.state.doctor.closingTime, \r\n                    }}\r\n                    eventConstraint= {{\r\n                      start: Date.now(),\r\n                      end: '2100-01-01',\r\n                      businessHours: {\r\n                      daysOfWeek: [ 1, 2, 3, 4, 5 ], \r\n                      startTime: this.state.doctor.openingTime, \r\n                      endTime: this.state.doctor.closingTime, \r\n                      }\r\n                    }}\r\n                    weekends={this.state.weekendsVisible}\r\n                    events={this.state.events} \r\n                    select={this.handleDateSelect}\r\n                    eventContent={renderEventContent} \r\n                    eventClick={this.handleEventClick}\r\n                    eventsSet={this.handleEvents} \r\n                    eventAdd={(event)=>this.appoCreate(event)}\r\n                    eventChange={(event)=>this.appoEdit(event)}\r\n                    eventRemove={(event)=>this.appoCancel(event)}\r\n                    defaultTimedEventDuration= '00:30'\r\n                  />\r\n                </div>\r\n              </>\r\n              )\r\n              :null}\r\n\r\n          </div>      \r\n          \r\n\r\n        </div>     \r\n                   \r\n      </>        \r\n      )\r\n    \r\n    }\r\n  }\r\n  // Auxiliary function for rendering the events in the calendar\r\n  function renderEventContent(eventInfo) {\r\n    return (\r\n      <>\r\n        <b>{eventInfo.timeText}</b>\r\n      </>\r\n    )\r\n  }\r\n  ","import React, { Component } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport momentPlugin from '@fullcalendar/moment'\r\nimport moment from 'moment'\r\n\r\n\r\nexport default class DoctorCalendar extends Component {\r\n    state={\r\n        doctor: {},\r\n        weekendsVisible: false,\r\n        currentEvents: [],\r\n        updatedField: {},\r\n        editing: false,\r\n        unedited: '',\r\n        appointments: [],\r\n        events:[]\r\n      }\r\n      componentDidMount(){\r\n        axios.get(`${API_URL}/doctor/${this.props.loggedInUser._id}`, {withCredentials: true})\r\n          .then((res)=>{\r\n            this.setState({doctor: res.data}, ()=>{console.log(this.state.doctor, this.state.doctor.openingTime)})\r\n          })\r\n          axios.get(`${API_URL}/doctor/appointments/${this.props.loggedInUser._id}`, {withCredentials: true})\r\n          .then((res)=>{\r\n            this.setState({appointments: res.data, events: res.data.map(appointment=>{return {title: appointment.reason, start:appointment.time, id:appointment.eventId, editable: false, patient: appointment.patient, appointment: appointment._id}})}) \r\n          })\r\n      }\r\n      handleEventClick = (clickInfo) => {\r\n          console.log (clickInfo)\r\n        this.props.history.push(`/calendar/${clickInfo.event.extendedProps.appointment}`)\r\n      }\r\n      handleEvents = (events) => {\r\n        this.setState({\r\n          currentEvents: events\r\n        })\r\n      }\r\n    render() {\r\n      console.log (this.state.doctor.openingTime)\r\n        return (\r\n          <>\r\n            <h1>Calendar</h1>\r\n\r\n            <FullCalendar\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, momentPlugin]}\r\n            headerToolbar={{\r\n              left: 'prev',\r\n              center: 'title',\r\n              right: 'next'\r\n            }}\r\n            titleFormat = 'DD/MM/YYYY'\r\n            initialView='timeGridDay'\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            allDaySlot= {false}\r\n            eventDurationEditable={false}\r\n            slotMinTime= '08:00'\r\n            slotMaxTime= '20:00'\r\n            businessHours = {{businessHours: {\r\n                daysOfWeek: [ 1, 2, 3, 4, 5 ], \r\n                startTime: `${this.state.doctor.openingTime}`,\r\n                endTime: this.state.doctor.closingTime,\r\n              }}}\r\n            weekends={this.state.weekendsVisible}\r\n            events={this.state.events} \r\n            eventContent={renderEventContent} \r\n            eventClick={this.handleEventClick}\r\n            eventsSet={this.handleEvents} \r\n            defaultTimedEventDuration= '00:30'\r\n            />\r\n            \r\n          </>\r\n        )\r\n    }\r\n}\r\nfunction renderEventContent(eventInfo) {\r\n    console.log (eventInfo.event)\r\n    return (\r\n      <div className='event-content'>\r\n        <b>{eventInfo.timeText}</b>\r\n        <i>{eventInfo.event.extendedProps.patient.username}</i>\r\n        <i>{eventInfo.event.title}</i>\r\n        </div>\r\n    )\r\n  }","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment';\r\n\r\n\r\nexport default class AppointmentDetails extends Component {\r\n  state={\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`${API_URL}/doctor/appointment/${this.props.match.params.appointmentId}`, {withCredentials: true})\r\n    .then((res)=>this.setState({appointment: res.data}, ()=>console.log (this.state.appointment)))\r\n\r\n  }\r\n\r\n  cancelAppointment=(appointment)=>{\r\n    if (window.confirm(`Are you sure you want to cancel the appointment?`)){\r\n      axios.delete(`${API_URL}/cancel/${this.props.match.params.appointmentId}`, {withCredentials:true})\r\n      .then(()=>this.props.history.push('/calendar'))\r\n    }\r\n  }\r\n\r\n  toggleLoader=(e)=>{\r\n    e.classList.toggle('hidden-button')\r\n  }\r\n\r\n  loadReport=(e)=>{\r\n    let image = e.getElementsByTagName('INPUT')[0].files[0]\r\n    let uploadData = new FormData()\r\n    uploadData.append('imageUrl', image)\r\n    axios.post(`${API_URL}/upload`, uploadData)\r\n      .then((res)=> {console.log(res.data);axios.patch(`${API_URL}/append-report/${this.props.match.params.appointmentId}`, {report: res.data.image}, {withCredentials:true})})\r\n      .then(()=>{\r\n      this.toggleLoader(e)\r\n      window.location.reload()\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (!this.state.appointment){\r\n      return <img src=\"../images/loader.gif\" alt=\"loader\"/>\r\n  }\r\n  const{username, phoneNumber, email, allergies, history} = this.state.appointment.patient\r\n  const {time, reason} = this.state.appointment\r\n\r\n  let dateApp = moment(time).local().format('Do MMM YYYY')\r\n  let timeApp =  moment(time).local().format('HH:mm')\r\n  let timeToApp\r\n  (time > Date.now())? timeToApp=moment(time).local().toNow(): timeToApp=moment(time).local().fromNow()\r\n\r\n    return (\r\n      <>\r\n\r\n        <h1> Appointment Details</h1>\r\n\r\n        <div className=\"main-content appointment-details-card\">\r\n          \r\n          <div className=\"top-card-app-details\">\r\n            <p>On: {dateApp} at {timeApp}, {timeToApp}</p>\r\n            <p>Reason: {reason}</p>\r\n          </div>\r\n\r\n          <div className=\"bottom-card-app-details\">\r\n            <div>\r\n              <h3>Patient information</h3>\r\n              <p>Name: {username}</p>\r\n              <p>Phone: {phoneNumber}</p>\r\n              <p>Email: {email}</p>\r\n              <p>Allergies: {allergies}</p>\r\n              <p>Medical History: {history}</p>  \r\n            </div>\r\n\r\n            <div className=\"btn-app-details\">\r\n            {!(this.state.appointment.prescription)? \r\n              <Link to={`/create-prescription/${this.props.match.params.appointmentId}`}><button className=\"button\">Create Prescription</button></Link>\r\n              :<button disabled className=\"button disabled\">Prescription added</button>}\r\n            \r\n              \r\n              \r\n              {moment(this.state.appointment.time)>moment(Date.now())?\r\n              <button className=\"button\" onClick={()=>this.cancelAppointment(this.props.match.params.appointmentId)}>Cancel appointment</button>: <button disabled className=\"button disabled\" onClick={()=>this.cancelAppointment(this.props.match.params.appointmentId)}>Cancel appointment</button>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"report-upload\">\r\n            <button className=\"button\" onClick={()=>this.toggleLoader(document.getElementById('report-group'))}>{this.state.appointment.report? 'Replace Report':'Upload Report'}</button>\r\n\r\n            <div className='hidden-button' id='report-group'>\r\n              <input type='file' name='report' className=\"form-control\"/>\r\n              <button className=\"button\" onClick={()=>this.loadReport(document.getElementById('report-group'))}>Submit</button>\r\n            </div>\r\n\r\n            {/* {(this.state.appointment.prescription)? <p>There is already a prescription associated to this appointment.</p>:null} */}\r\n\r\n          </div>\r\n                      \r\n      </div>\r\n\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <footer>\r\n          <h4><strong>Take care of your health!</strong></h4>\r\n        </footer>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PrescriptionItem extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <div className=\"added-med\">\r\n          <p><strong>Medication: </strong>{this.props.medication.name}</p>\r\n          <p><strong>Dose per take: </strong>{this.props.medication.dosePerTake}</p>\r\n          <p><strong>Takes per day: </strong>{this.props.medication.takesPerDay}</p>\r\n          <p><strong>Days per take: </strong>{this.props.medication.daysPerTake}</p>\r\n          <p><strong>Start date: </strong>{this.props.medication.startDate}</p>\r\n          <p><strong>End date: </strong>{this.props.medication.endDate}</p>\r\n          <p><strong>Comments: </strong>{this.props.medication.comments}</p>\r\n\r\n          <button className=\"button\" onClick={()=>this.props.onDelete(this.props.id)}>Delete</button> \r\n        </div>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PrescriptionForm extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <form className='prescription-form' onSubmit={this.props.onCommit}>\r\n        \r\n          <small>Please fill in all the fields</small>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Medication name </label>\r\n            <input name='name' id='name' type='text'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Dose per take </label>\r\n            <input name='dosePerTake' id='dosePerTake' type='text' placeholder='ex: 2 pills'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Takes per day </label>\r\n            <input name='takesPerDay' id='takesPerDay' type='number' min='0'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Days per take </label>\r\n            <input name='daysPerTake' id='daysPerTake' type='number' min='0'/>\r\n            <small>If the patient needs to take the medication every day, write 1. If once every two days, write 2 and so on.</small>\r\n\r\n          </div>\r\n          <div className=\"presription-inputs\">\r\n            <label>Start date </label>\r\n            <input name='startDate' id='startDate' min={Date.now().toLocaleString()} type='date' placeholder='When should the patient start the treatment?'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>End date </label>\r\n            <input name='endDate' id='endDate' type='date' placeholder='When should the patient stop the treatment?'/>\r\n          </div>\r\n\r\n          <div className=\"presription-inputs\">\r\n            <label>Comments </label>\r\n            <textarea name='comments' id='comments' type='text' placeholder='Additional comment' rows=\"3\" cols=\"30\"></textarea>\r\n          </div>\r\n\r\n          \r\n\r\n          <button className=\"add-med-btn\" type='submit'><img src=\"/images/btn-add.png\" alt=\"btn\"/></button>\r\n\r\n        </form>        \r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport PrescriptionItem from './PrescriptionItem'\r\nimport PrescriptionForm from './PrescriptionForm'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\nimport moment from 'moment'\r\n\r\n \r\n\r\n\r\nexport default class CreatePrescription extends Component {\r\n\r\n  state={\r\n    prescription: {medications:[]}\r\n  }\r\n\r\n\r\n  handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    \r\n    const {name, dosePerTake, startDate, endDate, takesPerDay, daysPerTake, comments} = e.currentTarget\r\n    let newMedication ={\r\n      name: name.value, \r\n      dosePerTake: dosePerTake.value,\r\n      startDate: startDate.value,\r\n      endDate: endDate.value,\r\n      takesPerDay: takesPerDay.value,\r\n      daysPerTake: daysPerTake.value,\r\n      comments: comments.value}\r\n\r\n    if (moment(startDate.value).isBefore(moment(Date.now())) || takesPerDay<=0 || daysPerTake<=0){\r\n      alert('Impossible parameters. Please double check the prescription')\r\n      return\r\n\r\n    }\r\n    let clonePrescription= JSON.parse(JSON.stringify(this.state.prescription))\r\n    clonePrescription.medications.push(newMedication)\r\n    this.setState({prescription: clonePrescription})\r\n    let inputs = e.currentTarget.getElementsByTagName('INPUT')\r\n    for (let input of inputs) input.value=''\r\n    \r\n  }\r\n\r\n  \r\n\r\n  handleDelete=(id)=>{\r\n    console.log(id)\r\n    let newPrescription= this.state.prescription.medications.filter((medication, index) => {\r\n      return index !== id\r\n    })\r\n    console.log ( newPrescription)\r\n    \r\n    this.setState({prescription: {medications: newPrescription}})\r\n\r\n  }\r\n\r\n  handleCreate=()=>{\r\n    console.log(this.state.prescription.medications)\r\n    axios.post(`${API_URL}/create-prescription/${this.props.match.params.appointmentId}`, {medications:\r\n      this.state.prescription.medications}, {withCredentials:true})\r\n      .then(res=> {\r\n        this.props.history.push('/calendar')\r\n      })\r\n      .catch(err=> {\r\n        console.log (err)\r\n        this.setState({errorMsg: 'Could not create prescription. Please check that everything is filled out and try again.'})})\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Prescription Form</h1>\r\n        \r\n        <div className=\"main-content prescrition-form-card\">\r\n\r\n          <PrescriptionForm onCommit={this.handleSubmit}/>\r\n\r\n          <button className=\"button save-pres-btn\" onClick={this.handleCreate}>Save prescription</button>\r\n\r\n          <div className=\"medications-added-card\">            \r\n            {(this.state.prescription.medications) ? this.state.prescription.medications.map((medication, id)=>{return <><PrescriptionItem key={id} id={id} medication={medication} onDelete={this.handleDelete}/> <hr/></>}): null\r\n            }\r\n          </div>\r\n\r\n          <p>{this.state.errorMsg}</p>          \r\n          \r\n\r\n        </div>\r\n\r\n       \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar'\r\nimport HomePage from './components/HomePage'\r\nimport Signup from './components/Signup'\r\nimport Login from './components/Login'\r\nimport PatientProfile from './components/PatientProfile'\r\nimport PatientAppointments from './components/PatientAppointments'\r\nimport PatientMedPlanner from './components/PatientMedPlanner'\r\nimport DoctorProfile from './components/DoctorProfile'\r\nimport DoctorCalendar from './components/DoctorCalendar'\r\nimport AppointmentDetails from './components/AppointmentDetails'\r\nimport Footer from './components/Footer'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport {API_URL} from './config'\r\nimport axios from 'axios'\r\n\r\nimport {Switch, Route, withRouter, Redirect} from 'react-router-dom'\r\nimport CreatePrescription from './components/CreatePrescription';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    loggedInUser: null,\r\n    usertype: null,\r\n    errorMsg:'',\r\n    desiredUrl: null,\r\n    passwordStrength: ''\r\n  }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n    if (!this.state.loggedInUser){\r\n      axios.get(`${API_URL}/user`, {withCredentials: true})\r\n      .then((res) => {\r\n          this.setState({\r\n            loggedInUser: res.data.loggedInUser,\r\n            usertype: res.data.usertype\r\n          })\r\n        })\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n  handleSignUp = (e) => {\r\n    e.preventDefault();\r\n    const {email, password, usertype, username} = e.currentTarget;\r\n\r\n    axios.post(`${API_URL}/auth/signup`, {\r\n      username: username.value,\r\n      email: email.value,\r\n      password: password.value,\r\n      usertype: usertype.value,\r\n      // allergies: allergies.value,\r\n      // history: history.value\r\n      // to check if withCredentials is needed and state change\r\n    })\r\n      .then((res) => {\r\n        this.props.history.push('/login')\r\n      })\r\n      .catch(err=>{\r\n        this.setState({\r\n          errorMsg: err.response.data.errorMessage\r\n        }, ()=>console.log(this.state.errorMsg, err.response))\r\n      }) \r\n  }\r\n\r\n  \r\n  handleLogIn = (e) => {\r\n    e.preventDefault(); \r\n    const {email, password, usertype} = e.currentTarget;\r\n    axios.post(`${API_URL}/auth/login`, {\r\n      email: email.value, \r\n      password: password.value,\r\n      usertype: usertype.value\r\n    },  {withCredentials: true})\r\n      .then((res) => {\r\n        this.setState({\r\n          loggedInUser: res.data,\r\n          usertype: usertype.value,\r\n          errorMsg: null\r\n        }, () => {       \r\n          if (this.state.usertype === \"patient\"){\r\n            if (window.location.pathname.includes('doctor')){\r\n              this.props.history.push(window.location.pathname)\r\n            } \r\n            else if (!window.location.pathname.includes('doctor')) (this.props.history.push('/profile'))\r\n          } \r\n          else if (this.state.usertype === \"doctor\"){\r\n            this.props.history.push(`/doctor/${this.state.loggedInUser._id}`)\r\n          }\r\n        })\r\n      })\r\n      .catch(err=>{\r\n        this.setState({\r\n          errorMsg: err.response.data.error\r\n        })\r\n      }) \r\n  }\r\n\r\n\r\n\r\n  handleLogOut = (e) => {\r\n    //{withCredentials: true} is not false ???\r\n    axios.post(`${API_URL}/auth/logout`, {}, {withCredentials: true})\r\n      .then(() => {\r\n        this.setState({\r\n          loggedInUser: null,\r\n          usertype: null,\r\n          desiredUrl: null\r\n        }, ()=>{\r\n          this.props.history.push('/')\r\n        })\r\n      })    \r\n  }\r\n\r\n  handlePass=(e)=>{\r\n    let strength = 0\r\n    let lowerCase = new RegExp (/^(?=.*[a-z])/)\r\n    let upperCase = new RegExp (/(?=.*[A-Z])/)\r\n    let number = new RegExp (/(?=.*[0-9])/)\r\n    let especial = new RegExp (/(?=.*[!@#$%^&*])/)  \r\n    let amount = new RegExp (/(?=.{8,})/)\r\n    \r\n    let password= e.currentTarget.value\r\n    if (lowerCase.test(password)) {strength++}\r\n    if (upperCase.test(password)) {strength++}\r\n    if (number.test(password)) {strength++}\r\n    if (especial.test(password)) {strength++}\r\n    if (amount.test(password)) {strength++}\r\n    \r\n    if (strength===0) this.setState({passwordStrength: ''})\r\n    if (strength<3 && strength>0) this.setState({passwordStrength: 'Your password is too weak.'})\r\n    if (strength<5 && strength>=3) this.setState({passwordStrength: 'Almost there, you just need to increase your password strength a little more.'})\r\n    if (strength>=5) this.setState({passwordStrength: 'Your password is good to go!'})\r\n\r\n    if (e.currentTarget.value==='') this.setState({errorMsg: ''})\r\n  }\r\n\r\n  clearError=(e)=>{\r\n    if (e.currentTarget.value==='') this.setState({errorMsg: ''})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"body\">\r\n\r\n                \r\n        {/* add condition to render only if logged in */}\r\n        <NavBar loggedInUser= {this.state.loggedInUser} usertype= {this.state.usertype} onLogout={this.handleLogOut}/>     \r\n\r\n        <Switch>\r\n\r\n          {/* Public routes */}\r\n          <Route exact path=\"/\" render={() => <HomePage  doctorList1={this.state.doctorList}/>}/>      \r\n\r\n\r\n          {/* Routes for logged out users */}\r\n          {(!this.state.loggedInUser) ?\r\n            <>\r\n              <Route path=\"/login\" render={() => <Login errorMsg={this.state.errorMsg} onClear={this.clearError} onLogIn={this.handleLogIn}/>}/> \r\n              <Route path=\"/signup\" render={() => <Signup onPass={this.handlePass} passwordStrength={this.state.passwordStrength} onClear={this.clearError} errorMsg={this.state.errorMsg} onSignUp={this.handleSignUp}/>}/>\r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <Login onClear={this.clearError} errorMsg={this.state.errorMsg} onLogIn={this.handleLogIn}/>}/>\r\n            </>\r\n            : null}\r\n          \r\n\r\n          {/* Routes for doctors */}\r\n          {(this.state.usertype==='doctor')?\r\n            <>\r\n              <Route exact path=\"/calendar\" render={(routeProps) => {\r\n                return <DoctorCalendar loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              <Route path=\"/calendar/:appointmentId\" render={(routeProps) => {\r\n                return <AppointmentDetails loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <DoctorProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }/>\r\n              <Route path=\"/create-prescription/:appointmentId\" render={routeProps=> <CreatePrescription loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }/>\r\n            </>\r\n            :null}\r\n\r\n \r\n          {/* Routes for patients */}\r\n          {(this.state.usertype==='patient')?\r\n            <>\r\n              <Route path=\"/profile\" render={(routeProps) => {\r\n                return <PatientProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n\r\n              <Route path=\"/appointments\" render={(routeProps) => {\r\n                return <PatientAppointments loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n\r\n              <Route path=\"/medication-planner\" render={(routeProps) => {\r\n                return <PatientMedPlanner loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n              }}/>\r\n              \r\n              <Route path=\"/doctor/:doctorId\" render={routeProps=> <DoctorProfile loggedInUser={this.state.loggedInUser} usertype={this.state.usertype} {...routeProps}/>\r\n            }/>\r\n            </>\r\n            : null }\r\n        \r\n           \r\n        </Switch>\r\n\r\n        <Footer />\r\n\r\n      \r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}